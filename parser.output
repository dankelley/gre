Conflict in state 7 between rule 128 and token FILE_TEST resolved as shift.
Conflict in state 7 between rule 128 and token NOT resolved as shift.
Conflict in state 7 between rule 128 and token '<' resolved as shift.
Conflict in state 7 between rule 128 and token '+' resolved as shift.
Conflict in state 7 between rule 128 and token '-' resolved as shift.
Conflict in state 7 between rule 128 and token '/' resolved as shift.
Conflict in state 7 between rule 128 and token '(' resolved as shift.
Conflict in state 21 between rule 125 and token '(' resolved as shift.
Conflict in state 22 between rule 122 and token '(' resolved as shift.
Conflict in state 100 between rule 129 and token ASSIGNOP resolved as shift.
Conflict in state 100 between rule 129 and token STRING_EQ resolved as shift.
Conflict in state 100 between rule 129 and token STRING_NE resolved as shift.
Conflict in state 100 between rule 129 and token DOT resolved as shift.
Conflict in state 100 between rule 129 and token EQ resolved as shift.
Conflict in state 100 between rule 129 and token LE resolved as shift.
Conflict in state 100 between rule 129 and token GE resolved as shift.
Conflict in state 100 between rule 129 and token AND resolved as reduce.
Conflict in state 100 between rule 129 and token OR resolved as reduce.
Conflict in state 100 between rule 129 and token '?' resolved as shift.
Conflict in state 100 between rule 129 and token '<' resolved as shift.
Conflict in state 100 between rule 129 and token '>' resolved as shift.
Conflict in state 100 between rule 129 and token NE resolved as shift.
Conflict in state 100 between rule 129 and token '+' resolved as shift.
Conflict in state 100 between rule 129 and token '-' resolved as shift.
Conflict in state 100 between rule 129 and token MULOP resolved as shift.
Conflict in state 100 between rule 129 and token '/' resolved as shift.
Conflict in state 100 between rule 129 and token '%' resolved as shift.
Conflict in state 100 between rule 129 and token POWOP resolved as shift.
Conflict in state 101 between rule 130 and token ASSIGNOP resolved as shift.
Conflict in state 101 between rule 130 and token STRING_EQ resolved as shift.
Conflict in state 101 between rule 130 and token STRING_NE resolved as shift.
Conflict in state 101 between rule 130 and token DOT resolved as shift.
Conflict in state 101 between rule 130 and token EQ resolved as shift.
Conflict in state 101 between rule 130 and token LE resolved as shift.
Conflict in state 101 between rule 130 and token GE resolved as shift.
Conflict in state 101 between rule 130 and token AND resolved as reduce.
Conflict in state 101 between rule 130 and token OR resolved as reduce.
Conflict in state 101 between rule 130 and token '?' resolved as shift.
Conflict in state 101 between rule 130 and token '<' resolved as shift.
Conflict in state 101 between rule 130 and token '>' resolved as shift.
Conflict in state 101 between rule 130 and token NE resolved as shift.
Conflict in state 101 between rule 130 and token '+' resolved as shift.
Conflict in state 101 between rule 130 and token '-' resolved as shift.
Conflict in state 101 between rule 130 and token MULOP resolved as shift.
Conflict in state 101 between rule 130 and token '/' resolved as shift.
Conflict in state 101 between rule 130 and token '%' resolved as shift.
Conflict in state 101 between rule 130 and token POWOP resolved as shift.
Conflict in state 102 between rule 134 and token ASSIGNOP resolved as shift.
Conflict in state 102 between rule 134 and token STRING_EQ resolved as shift.
Conflict in state 102 between rule 134 and token STRING_NE resolved as shift.
Conflict in state 102 between rule 134 and token DOT resolved as shift.
Conflict in state 102 between rule 134 and token EQ resolved as shift.
Conflict in state 102 between rule 134 and token LE resolved as shift.
Conflict in state 102 between rule 134 and token GE resolved as shift.
Conflict in state 102 between rule 134 and token AND resolved as reduce.
Conflict in state 102 between rule 134 and token OR resolved as reduce.
Conflict in state 102 between rule 134 and token '?' resolved as shift.
Conflict in state 102 between rule 134 and token '<' resolved as shift.
Conflict in state 102 between rule 134 and token '>' resolved as shift.
Conflict in state 102 between rule 134 and token NE resolved as shift.
Conflict in state 102 between rule 134 and token '+' resolved as shift.
Conflict in state 102 between rule 134 and token '-' resolved as shift.
Conflict in state 102 between rule 134 and token MULOP resolved as shift.
Conflict in state 102 between rule 134 and token '/' resolved as shift.
Conflict in state 102 between rule 134 and token '%' resolved as shift.
Conflict in state 102 between rule 134 and token POWOP resolved as shift.
Conflict in state 109 between rule 137 and token ASSIGNOP resolved as reduce.
Conflict in state 109 between rule 137 and token STRING_EQ resolved as reduce.
Conflict in state 109 between rule 137 and token STRING_NE resolved as reduce.
Conflict in state 109 between rule 137 and token DOT resolved as reduce.
Conflict in state 109 between rule 137 and token EQ resolved as reduce.
Conflict in state 109 between rule 137 and token LE resolved as reduce.
Conflict in state 109 between rule 137 and token GE resolved as reduce.
Conflict in state 109 between rule 137 and token AND resolved as reduce.
Conflict in state 109 between rule 137 and token OR resolved as reduce.
Conflict in state 109 between rule 137 and token '?' resolved as reduce.
Conflict in state 109 between rule 137 and token '<' resolved as reduce.
Conflict in state 109 between rule 137 and token '>' resolved as reduce.
Conflict in state 109 between rule 137 and token NE resolved as reduce.
Conflict in state 109 between rule 137 and token '+' resolved as reduce.
Conflict in state 109 between rule 137 and token '-' resolved as reduce.
Conflict in state 109 between rule 137 and token MULOP resolved as reduce.
Conflict in state 109 between rule 137 and token '/' resolved as reduce.
Conflict in state 109 between rule 137 and token '%' resolved as reduce.
Conflict in state 109 between rule 137 and token POWOP resolved as shift.
Conflict in state 142 between rule 147 and token ASSIGNOP resolved as shift.
Conflict in state 142 between rule 147 and token STRING_EQ resolved as shift.
Conflict in state 142 between rule 147 and token STRING_NE resolved as shift.
Conflict in state 142 between rule 147 and token DOT resolved as shift.
Conflict in state 142 between rule 147 and token EQ resolved as shift.
Conflict in state 142 between rule 147 and token LE resolved as shift.
Conflict in state 142 between rule 147 and token GE resolved as shift.
Conflict in state 142 between rule 147 and token AND resolved as reduce.
Conflict in state 142 between rule 147 and token OR resolved as reduce.
Conflict in state 142 between rule 147 and token '?' resolved as shift.
Conflict in state 142 between rule 147 and token '<' resolved as shift.
Conflict in state 142 between rule 147 and token '>' resolved as shift.
Conflict in state 142 between rule 147 and token NE resolved as shift.
Conflict in state 142 between rule 147 and token '+' resolved as shift.
Conflict in state 142 between rule 147 and token '-' resolved as shift.
Conflict in state 142 between rule 147 and token MULOP resolved as shift.
Conflict in state 142 between rule 147 and token '/' resolved as shift.
Conflict in state 142 between rule 147 and token '%' resolved as shift.
Conflict in state 142 between rule 147 and token POWOP resolved as shift.
Conflict in state 153 between rule 178 and token ASSIGNOP resolved as reduce.
Conflict in state 153 between rule 178 and token STRING_EQ resolved as reduce.
Conflict in state 153 between rule 178 and token STRING_NE resolved as reduce.
Conflict in state 153 between rule 178 and token DOT resolved as reduce.
Conflict in state 153 between rule 178 and token EQ resolved as reduce.
Conflict in state 153 between rule 178 and token LE resolved as reduce.
Conflict in state 153 between rule 178 and token GE resolved as reduce.
Conflict in state 153 between rule 178 and token AND resolved as reduce.
Conflict in state 153 between rule 178 and token OR resolved as reduce.
Conflict in state 153 between rule 178 and token '?' resolved as reduce.
Conflict in state 153 between rule 178 and token '<' resolved as reduce.
Conflict in state 153 between rule 178 and token '>' resolved as reduce.
Conflict in state 153 between rule 178 and token NE resolved as reduce.
Conflict in state 153 between rule 178 and token '+' resolved as reduce.
Conflict in state 153 between rule 178 and token '-' resolved as reduce.
Conflict in state 153 between rule 178 and token MULOP resolved as reduce.
Conflict in state 153 between rule 178 and token '/' resolved as reduce.
Conflict in state 153 between rule 178 and token '%' resolved as reduce.
Conflict in state 153 between rule 178 and token POWOP resolved as shift.
Conflict in state 160 between rule 187 and token ASSIGNOP resolved as reduce.
Conflict in state 160 between rule 187 and token STRING_EQ resolved as reduce.
Conflict in state 160 between rule 187 and token STRING_NE resolved as reduce.
Conflict in state 160 between rule 187 and token DOT resolved as reduce.
Conflict in state 160 between rule 187 and token EQ resolved as reduce.
Conflict in state 160 between rule 187 and token LE resolved as reduce.
Conflict in state 160 between rule 187 and token GE resolved as reduce.
Conflict in state 160 between rule 187 and token AND resolved as reduce.
Conflict in state 160 between rule 187 and token OR resolved as reduce.
Conflict in state 160 between rule 187 and token '?' resolved as reduce.
Conflict in state 160 between rule 187 and token '<' resolved as reduce.
Conflict in state 160 between rule 187 and token '>' resolved as reduce.
Conflict in state 160 between rule 187 and token NE resolved as reduce.
Conflict in state 160 between rule 187 and token '+' resolved as reduce.
Conflict in state 160 between rule 187 and token '-' resolved as reduce.
Conflict in state 160 between rule 187 and token MULOP resolved as reduce.
Conflict in state 160 between rule 187 and token '/' resolved as reduce.
Conflict in state 160 between rule 187 and token '%' resolved as reduce.
Conflict in state 160 between rule 187 and token POWOP resolved as shift.
Conflict in state 161 between rule 186 and token ASSIGNOP resolved as reduce.
Conflict in state 161 between rule 186 and token STRING_EQ resolved as reduce.
Conflict in state 161 between rule 186 and token STRING_NE resolved as reduce.
Conflict in state 161 between rule 186 and token DOT resolved as reduce.
Conflict in state 161 between rule 186 and token EQ resolved as reduce.
Conflict in state 161 between rule 186 and token LE resolved as reduce.
Conflict in state 161 between rule 186 and token GE resolved as reduce.
Conflict in state 161 between rule 186 and token AND resolved as reduce.
Conflict in state 161 between rule 186 and token OR resolved as reduce.
Conflict in state 161 between rule 186 and token '?' resolved as reduce.
Conflict in state 161 between rule 186 and token '<' resolved as reduce.
Conflict in state 161 between rule 186 and token '>' resolved as reduce.
Conflict in state 161 between rule 186 and token NE resolved as reduce.
Conflict in state 161 between rule 186 and token '+' resolved as reduce.
Conflict in state 161 between rule 186 and token '-' resolved as reduce.
Conflict in state 161 between rule 186 and token MULOP resolved as reduce.
Conflict in state 161 between rule 186 and token '/' resolved as reduce.
Conflict in state 161 between rule 186 and token '%' resolved as reduce.
Conflict in state 161 between rule 186 and token POWOP resolved as shift.
Conflict in state 257 between rule 112 and token '<' resolved as reduce.
Conflict in state 257 between rule 112 and token '+' resolved as reduce.
Conflict in state 257 between rule 112 and token '-' resolved as reduce.
Conflict in state 257 between rule 112 and token '/' resolved as reduce.
Conflict in state 258 between rule 156 and token ASSIGNOP resolved as shift.
Conflict in state 258 between rule 156 and token STRING_EQ resolved as shift.
Conflict in state 258 between rule 156 and token STRING_NE resolved as shift.
Conflict in state 258 between rule 156 and token DOT resolved as shift.
Conflict in state 258 between rule 156 and token EQ resolved as shift.
Conflict in state 258 between rule 156 and token LE resolved as shift.
Conflict in state 258 between rule 156 and token GE resolved as shift.
Conflict in state 258 between rule 156 and token AND resolved as reduce.
Conflict in state 258 between rule 156 and token OR resolved as reduce.
Conflict in state 258 between rule 156 and token '?' resolved as shift.
Conflict in state 258 between rule 156 and token '<' resolved as shift.
Conflict in state 258 between rule 156 and token '>' resolved as shift.
Conflict in state 258 between rule 156 and token NE resolved as shift.
Conflict in state 258 between rule 156 and token '+' resolved as shift.
Conflict in state 258 between rule 156 and token '-' resolved as shift.
Conflict in state 258 between rule 156 and token MULOP resolved as shift.
Conflict in state 258 between rule 156 and token '/' resolved as shift.
Conflict in state 258 between rule 156 and token '%' resolved as shift.
Conflict in state 258 between rule 156 and token POWOP resolved as shift.
Conflict in state 259 between rule 161 and token ASSIGNOP resolved as reduce.
Conflict in state 259 between rule 161 and token STRING_EQ resolved as reduce.
Conflict in state 259 between rule 161 and token STRING_NE resolved as reduce.
Conflict in state 259 between rule 161 and token DOT resolved as reduce.
Conflict in state 259 between rule 161 and token EQ resolved as reduce.
Conflict in state 259 between rule 161 and token LE resolved as reduce.
Conflict in state 259 between rule 161 and token GE resolved as reduce.
Conflict in state 259 between rule 161 and token AND resolved as reduce.
Conflict in state 259 between rule 161 and token OR resolved as reduce.
Conflict in state 259 between rule 161 and token '?' resolved as reduce.
Conflict in state 259 between rule 161 and token '<' resolved as reduce.
Conflict in state 259 between rule 161 and token '>' resolved as reduce.
Conflict in state 259 between rule 161 and token NE resolved as reduce.
Conflict in state 259 between rule 161 and token '+' resolved as reduce.
Conflict in state 259 between rule 161 and token '-' resolved as reduce.
Conflict in state 259 between rule 161 and token MULOP resolved as reduce.
Conflict in state 259 between rule 161 and token '/' resolved as reduce.
Conflict in state 259 between rule 161 and token '%' resolved as reduce.
Conflict in state 259 between rule 161 and token POWOP resolved as shift.
Conflict in state 260 between rule 162 and token ASSIGNOP resolved as reduce.
Conflict in state 260 between rule 162 and token STRING_EQ resolved as reduce.
Conflict in state 260 between rule 162 and token STRING_NE resolved as reduce.
Conflict in state 260 between rule 162 and token DOT resolved as reduce.
Conflict in state 260 between rule 162 and token EQ resolved as reduce.
Conflict in state 260 between rule 162 and token LE resolved as reduce.
Conflict in state 260 between rule 162 and token GE resolved as reduce.
Conflict in state 260 between rule 162 and token AND resolved as reduce.
Conflict in state 260 between rule 162 and token OR resolved as reduce.
Conflict in state 260 between rule 162 and token '?' resolved as reduce.
Conflict in state 260 between rule 162 and token '<' resolved as reduce.
Conflict in state 260 between rule 162 and token '>' resolved as reduce.
Conflict in state 260 between rule 162 and token NE resolved as reduce.
Conflict in state 260 between rule 162 and token '+' resolved as reduce.
Conflict in state 260 between rule 162 and token '-' resolved as reduce.
Conflict in state 260 between rule 162 and token MULOP resolved as reduce.
Conflict in state 260 between rule 162 and token '/' resolved as reduce.
Conflict in state 260 between rule 162 and token '%' resolved as reduce.
Conflict in state 260 between rule 162 and token POWOP resolved as shift.
Conflict in state 261 between rule 160 and token ASSIGNOP resolved as reduce.
Conflict in state 261 between rule 160 and token STRING_EQ resolved as shift.
Conflict in state 261 between rule 160 and token STRING_NE resolved as shift.
Conflict in state 261 between rule 160 and token DOT resolved as reduce.
Conflict in state 261 between rule 160 and token EQ resolved as reduce.
Conflict in state 261 between rule 160 and token LE resolved as reduce.
Conflict in state 261 between rule 160 and token GE resolved as reduce.
Conflict in state 261 between rule 160 and token AND resolved as reduce.
Conflict in state 261 between rule 160 and token OR resolved as reduce.
Conflict in state 261 between rule 160 and token '?' resolved as reduce.
Conflict in state 261 between rule 160 and token '<' resolved as reduce.
Conflict in state 261 between rule 160 and token '>' resolved as reduce.
Conflict in state 261 between rule 160 and token NE resolved as reduce.
Conflict in state 261 between rule 160 and token '+' resolved as reduce.
Conflict in state 261 between rule 160 and token '-' resolved as reduce.
Conflict in state 261 between rule 160 and token MULOP resolved as shift.
Conflict in state 261 between rule 160 and token '/' resolved as shift.
Conflict in state 261 between rule 160 and token '%' resolved as shift.
Conflict in state 261 between rule 160 and token POWOP resolved as shift.
Conflict in state 262 between rule 166 and token ASSIGNOP resolved as reduce.
Conflict in state 262 between rule 166 and token STRING_EQ resolved as shift.
Conflict in state 262 between rule 166 and token STRING_NE resolved as shift.
Conflict in state 262 between rule 166 and token DOT resolved as shift.
Conflict in state 262 between rule 166 and token EQ resolved as an error.
Conflict in state 262 between rule 166 and token LE resolved as an error.
Conflict in state 262 between rule 166 and token GE resolved as an error.
Conflict in state 262 between rule 166 and token AND resolved as reduce.
Conflict in state 262 between rule 166 and token OR resolved as reduce.
Conflict in state 262 between rule 166 and token '?' resolved as reduce.
Conflict in state 262 between rule 166 and token '<' resolved as an error.
Conflict in state 262 between rule 166 and token '>' resolved as an error.
Conflict in state 262 between rule 166 and token NE resolved as an error.
Conflict in state 262 between rule 166 and token '+' resolved as shift.
Conflict in state 262 between rule 166 and token '-' resolved as shift.
Conflict in state 262 between rule 166 and token MULOP resolved as shift.
Conflict in state 262 between rule 166 and token '/' resolved as shift.
Conflict in state 262 between rule 166 and token '%' resolved as shift.
Conflict in state 262 between rule 166 and token POWOP resolved as shift.
Conflict in state 263 between rule 164 and token ASSIGNOP resolved as reduce.
Conflict in state 263 between rule 164 and token STRING_EQ resolved as shift.
Conflict in state 263 between rule 164 and token STRING_NE resolved as shift.
Conflict in state 263 between rule 164 and token DOT resolved as shift.
Conflict in state 263 between rule 164 and token EQ resolved as an error.
Conflict in state 263 between rule 164 and token LE resolved as an error.
Conflict in state 263 between rule 164 and token GE resolved as an error.
Conflict in state 263 between rule 164 and token AND resolved as reduce.
Conflict in state 263 between rule 164 and token OR resolved as reduce.
Conflict in state 263 between rule 164 and token '?' resolved as reduce.
Conflict in state 263 between rule 164 and token '<' resolved as an error.
Conflict in state 263 between rule 164 and token '>' resolved as an error.
Conflict in state 263 between rule 164 and token NE resolved as an error.
Conflict in state 263 between rule 164 and token '+' resolved as shift.
Conflict in state 263 between rule 164 and token '-' resolved as shift.
Conflict in state 263 between rule 164 and token MULOP resolved as shift.
Conflict in state 263 between rule 164 and token '/' resolved as shift.
Conflict in state 263 between rule 164 and token '%' resolved as shift.
Conflict in state 263 between rule 164 and token POWOP resolved as shift.
Conflict in state 264 between rule 168 and token ASSIGNOP resolved as reduce.
Conflict in state 264 between rule 168 and token STRING_EQ resolved as shift.
Conflict in state 264 between rule 168 and token STRING_NE resolved as shift.
Conflict in state 264 between rule 168 and token DOT resolved as shift.
Conflict in state 264 between rule 168 and token EQ resolved as an error.
Conflict in state 264 between rule 168 and token LE resolved as an error.
Conflict in state 264 between rule 168 and token GE resolved as an error.
Conflict in state 264 between rule 168 and token AND resolved as reduce.
Conflict in state 264 between rule 168 and token OR resolved as reduce.
Conflict in state 264 between rule 168 and token '?' resolved as reduce.
Conflict in state 264 between rule 168 and token '<' resolved as an error.
Conflict in state 264 between rule 168 and token '>' resolved as an error.
Conflict in state 264 between rule 168 and token NE resolved as an error.
Conflict in state 264 between rule 168 and token '+' resolved as shift.
Conflict in state 264 between rule 168 and token '-' resolved as shift.
Conflict in state 264 between rule 168 and token MULOP resolved as shift.
Conflict in state 264 between rule 168 and token '/' resolved as shift.
Conflict in state 264 between rule 168 and token '%' resolved as shift.
Conflict in state 264 between rule 168 and token POWOP resolved as shift.
Conflict in state 265 between rule 170 and token ASSIGNOP resolved as shift.
Conflict in state 265 between rule 170 and token STRING_EQ resolved as shift.
Conflict in state 265 between rule 170 and token STRING_NE resolved as shift.
Conflict in state 265 between rule 170 and token DOT resolved as shift.
Conflict in state 265 between rule 170 and token EQ resolved as shift.
Conflict in state 265 between rule 170 and token LE resolved as shift.
Conflict in state 265 between rule 170 and token GE resolved as shift.
Conflict in state 265 between rule 170 and token AND resolved as reduce.
Conflict in state 265 between rule 170 and token OR resolved as reduce.
Conflict in state 265 between rule 170 and token '?' resolved as shift.
Conflict in state 265 between rule 170 and token '<' resolved as shift.
Conflict in state 265 between rule 170 and token '>' resolved as shift.
Conflict in state 265 between rule 170 and token NE resolved as shift.
Conflict in state 265 between rule 170 and token '+' resolved as shift.
Conflict in state 265 between rule 170 and token '-' resolved as shift.
Conflict in state 265 between rule 170 and token MULOP resolved as shift.
Conflict in state 265 between rule 170 and token '/' resolved as shift.
Conflict in state 265 between rule 170 and token '%' resolved as shift.
Conflict in state 265 between rule 170 and token POWOP resolved as shift.
Conflict in state 266 between rule 169 and token ASSIGNOP resolved as shift.
Conflict in state 266 between rule 169 and token STRING_EQ resolved as shift.
Conflict in state 266 between rule 169 and token STRING_NE resolved as shift.
Conflict in state 266 between rule 169 and token DOT resolved as shift.
Conflict in state 266 between rule 169 and token EQ resolved as shift.
Conflict in state 266 between rule 169 and token LE resolved as shift.
Conflict in state 266 between rule 169 and token GE resolved as shift.
Conflict in state 266 between rule 169 and token AND resolved as shift.
Conflict in state 266 between rule 169 and token OR resolved as reduce.
Conflict in state 266 between rule 169 and token '?' resolved as shift.
Conflict in state 266 between rule 169 and token '<' resolved as shift.
Conflict in state 266 between rule 169 and token '>' resolved as shift.
Conflict in state 266 between rule 169 and token NE resolved as shift.
Conflict in state 266 between rule 169 and token '+' resolved as shift.
Conflict in state 266 between rule 169 and token '-' resolved as shift.
Conflict in state 266 between rule 169 and token MULOP resolved as shift.
Conflict in state 266 between rule 169 and token '/' resolved as shift.
Conflict in state 266 between rule 169 and token '%' resolved as shift.
Conflict in state 266 between rule 169 and token POWOP resolved as shift.
Conflict in state 268 between rule 163 and token ASSIGNOP resolved as reduce.
Conflict in state 268 between rule 163 and token STRING_EQ resolved as shift.
Conflict in state 268 between rule 163 and token STRING_NE resolved as shift.
Conflict in state 268 between rule 163 and token DOT resolved as shift.
Conflict in state 268 between rule 163 and token EQ resolved as an error.
Conflict in state 268 between rule 163 and token LE resolved as an error.
Conflict in state 268 between rule 163 and token GE resolved as an error.
Conflict in state 268 between rule 163 and token AND resolved as reduce.
Conflict in state 268 between rule 163 and token OR resolved as reduce.
Conflict in state 268 between rule 163 and token '?' resolved as reduce.
Conflict in state 268 between rule 163 and token '<' resolved as an error.
Conflict in state 268 between rule 163 and token '>' resolved as an error.
Conflict in state 268 between rule 163 and token NE resolved as an error.
Conflict in state 268 between rule 163 and token '+' resolved as shift.
Conflict in state 268 between rule 163 and token '-' resolved as shift.
Conflict in state 268 between rule 163 and token MULOP resolved as shift.
Conflict in state 268 between rule 163 and token '/' resolved as shift.
Conflict in state 268 between rule 163 and token '%' resolved as shift.
Conflict in state 268 between rule 163 and token POWOP resolved as shift.
Conflict in state 269 between rule 165 and token ASSIGNOP resolved as reduce.
Conflict in state 269 between rule 165 and token STRING_EQ resolved as shift.
Conflict in state 269 between rule 165 and token STRING_NE resolved as shift.
Conflict in state 269 between rule 165 and token DOT resolved as shift.
Conflict in state 269 between rule 165 and token EQ resolved as an error.
Conflict in state 269 between rule 165 and token LE resolved as an error.
Conflict in state 269 between rule 165 and token GE resolved as an error.
Conflict in state 269 between rule 165 and token AND resolved as reduce.
Conflict in state 269 between rule 165 and token OR resolved as reduce.
Conflict in state 269 between rule 165 and token '?' resolved as reduce.
Conflict in state 269 between rule 165 and token '<' resolved as an error.
Conflict in state 269 between rule 165 and token '>' resolved as an error.
Conflict in state 269 between rule 165 and token NE resolved as an error.
Conflict in state 269 between rule 165 and token '+' resolved as shift.
Conflict in state 269 between rule 165 and token '-' resolved as shift.
Conflict in state 269 between rule 165 and token MULOP resolved as shift.
Conflict in state 269 between rule 165 and token '/' resolved as shift.
Conflict in state 269 between rule 165 and token '%' resolved as shift.
Conflict in state 269 between rule 165 and token POWOP resolved as shift.
Conflict in state 270 between rule 167 and token ASSIGNOP resolved as reduce.
Conflict in state 270 between rule 167 and token STRING_EQ resolved as shift.
Conflict in state 270 between rule 167 and token STRING_NE resolved as shift.
Conflict in state 270 between rule 167 and token DOT resolved as shift.
Conflict in state 270 between rule 167 and token EQ resolved as an error.
Conflict in state 270 between rule 167 and token LE resolved as an error.
Conflict in state 270 between rule 167 and token GE resolved as an error.
Conflict in state 270 between rule 167 and token AND resolved as reduce.
Conflict in state 270 between rule 167 and token OR resolved as reduce.
Conflict in state 270 between rule 167 and token '?' resolved as reduce.
Conflict in state 270 between rule 167 and token '<' resolved as an error.
Conflict in state 270 between rule 167 and token '>' resolved as an error.
Conflict in state 270 between rule 167 and token NE resolved as an error.
Conflict in state 270 between rule 167 and token '+' resolved as shift.
Conflict in state 270 between rule 167 and token '-' resolved as shift.
Conflict in state 270 between rule 167 and token MULOP resolved as shift.
Conflict in state 270 between rule 167 and token '/' resolved as shift.
Conflict in state 270 between rule 167 and token '%' resolved as shift.
Conflict in state 270 between rule 167 and token POWOP resolved as shift.
Conflict in state 271 between rule 172 and token ASSIGNOP resolved as reduce.
Conflict in state 271 between rule 172 and token STRING_EQ resolved as shift.
Conflict in state 271 between rule 172 and token STRING_NE resolved as shift.
Conflict in state 271 between rule 172 and token DOT resolved as reduce.
Conflict in state 271 between rule 172 and token EQ resolved as reduce.
Conflict in state 271 between rule 172 and token LE resolved as reduce.
Conflict in state 271 between rule 172 and token GE resolved as reduce.
Conflict in state 271 between rule 172 and token AND resolved as reduce.
Conflict in state 271 between rule 172 and token OR resolved as reduce.
Conflict in state 271 between rule 172 and token '?' resolved as reduce.
Conflict in state 271 between rule 172 and token '<' resolved as reduce.
Conflict in state 271 between rule 172 and token '>' resolved as reduce.
Conflict in state 271 between rule 172 and token NE resolved as reduce.
Conflict in state 271 between rule 172 and token '+' resolved as reduce.
Conflict in state 271 between rule 172 and token '-' resolved as reduce.
Conflict in state 271 between rule 172 and token MULOP resolved as shift.
Conflict in state 271 between rule 172 and token '/' resolved as shift.
Conflict in state 271 between rule 172 and token '%' resolved as shift.
Conflict in state 271 between rule 172 and token POWOP resolved as shift.
Conflict in state 272 between rule 173 and token ASSIGNOP resolved as reduce.
Conflict in state 272 between rule 173 and token STRING_EQ resolved as shift.
Conflict in state 272 between rule 173 and token STRING_NE resolved as shift.
Conflict in state 272 between rule 173 and token DOT resolved as reduce.
Conflict in state 272 between rule 173 and token EQ resolved as reduce.
Conflict in state 272 between rule 173 and token LE resolved as reduce.
Conflict in state 272 between rule 173 and token GE resolved as reduce.
Conflict in state 272 between rule 173 and token AND resolved as reduce.
Conflict in state 272 between rule 173 and token OR resolved as reduce.
Conflict in state 272 between rule 173 and token '?' resolved as reduce.
Conflict in state 272 between rule 173 and token '<' resolved as reduce.
Conflict in state 272 between rule 173 and token '>' resolved as reduce.
Conflict in state 272 between rule 173 and token NE resolved as reduce.
Conflict in state 272 between rule 173 and token '+' resolved as reduce.
Conflict in state 272 between rule 173 and token '-' resolved as reduce.
Conflict in state 272 between rule 173 and token MULOP resolved as shift.
Conflict in state 272 between rule 173 and token '/' resolved as shift.
Conflict in state 272 between rule 173 and token '%' resolved as shift.
Conflict in state 272 between rule 173 and token POWOP resolved as shift.
Conflict in state 273 between rule 174 and token ASSIGNOP resolved as reduce.
Conflict in state 273 between rule 174 and token STRING_EQ resolved as reduce.
Conflict in state 273 between rule 174 and token STRING_NE resolved as reduce.
Conflict in state 273 between rule 174 and token DOT resolved as reduce.
Conflict in state 273 between rule 174 and token EQ resolved as reduce.
Conflict in state 273 between rule 174 and token LE resolved as reduce.
Conflict in state 273 between rule 174 and token GE resolved as reduce.
Conflict in state 273 between rule 174 and token AND resolved as reduce.
Conflict in state 273 between rule 174 and token OR resolved as reduce.
Conflict in state 273 between rule 174 and token '?' resolved as reduce.
Conflict in state 273 between rule 174 and token '<' resolved as reduce.
Conflict in state 273 between rule 174 and token '>' resolved as reduce.
Conflict in state 273 between rule 174 and token NE resolved as reduce.
Conflict in state 273 between rule 174 and token '+' resolved as reduce.
Conflict in state 273 between rule 174 and token '-' resolved as reduce.
Conflict in state 273 between rule 174 and token MULOP resolved as reduce.
Conflict in state 273 between rule 174 and token '/' resolved as reduce.
Conflict in state 273 between rule 174 and token '%' resolved as reduce.
Conflict in state 273 between rule 174 and token POWOP resolved as shift.
Conflict in state 274 between rule 175 and token ASSIGNOP resolved as reduce.
Conflict in state 274 between rule 175 and token STRING_EQ resolved as reduce.
Conflict in state 274 between rule 175 and token STRING_NE resolved as reduce.
Conflict in state 274 between rule 175 and token DOT resolved as reduce.
Conflict in state 274 between rule 175 and token EQ resolved as reduce.
Conflict in state 274 between rule 175 and token LE resolved as reduce.
Conflict in state 274 between rule 175 and token GE resolved as reduce.
Conflict in state 274 between rule 175 and token AND resolved as reduce.
Conflict in state 274 between rule 175 and token OR resolved as reduce.
Conflict in state 274 between rule 175 and token '?' resolved as reduce.
Conflict in state 274 between rule 175 and token '<' resolved as reduce.
Conflict in state 274 between rule 175 and token '>' resolved as reduce.
Conflict in state 274 between rule 175 and token NE resolved as reduce.
Conflict in state 274 between rule 175 and token '+' resolved as reduce.
Conflict in state 274 between rule 175 and token '-' resolved as reduce.
Conflict in state 274 between rule 175 and token MULOP resolved as reduce.
Conflict in state 274 between rule 175 and token '/' resolved as reduce.
Conflict in state 274 between rule 175 and token '%' resolved as reduce.
Conflict in state 274 between rule 175 and token POWOP resolved as shift.
Conflict in state 275 between rule 176 and token ASSIGNOP resolved as reduce.
Conflict in state 275 between rule 176 and token STRING_EQ resolved as reduce.
Conflict in state 275 between rule 176 and token STRING_NE resolved as reduce.
Conflict in state 275 between rule 176 and token DOT resolved as reduce.
Conflict in state 275 between rule 176 and token EQ resolved as reduce.
Conflict in state 275 between rule 176 and token LE resolved as reduce.
Conflict in state 275 between rule 176 and token GE resolved as reduce.
Conflict in state 275 between rule 176 and token AND resolved as reduce.
Conflict in state 275 between rule 176 and token OR resolved as reduce.
Conflict in state 275 between rule 176 and token '?' resolved as reduce.
Conflict in state 275 between rule 176 and token '<' resolved as reduce.
Conflict in state 275 between rule 176 and token '>' resolved as reduce.
Conflict in state 275 between rule 176 and token NE resolved as reduce.
Conflict in state 275 between rule 176 and token '+' resolved as reduce.
Conflict in state 275 between rule 176 and token '-' resolved as reduce.
Conflict in state 275 between rule 176 and token MULOP resolved as reduce.
Conflict in state 275 between rule 176 and token '/' resolved as reduce.
Conflict in state 275 between rule 176 and token '%' resolved as reduce.
Conflict in state 275 between rule 176 and token POWOP resolved as shift.
Conflict in state 276 between rule 177 and token ASSIGNOP resolved as reduce.
Conflict in state 276 between rule 177 and token STRING_EQ resolved as reduce.
Conflict in state 276 between rule 177 and token STRING_NE resolved as reduce.
Conflict in state 276 between rule 177 and token DOT resolved as reduce.
Conflict in state 276 between rule 177 and token EQ resolved as reduce.
Conflict in state 276 between rule 177 and token LE resolved as reduce.
Conflict in state 276 between rule 177 and token GE resolved as reduce.
Conflict in state 276 between rule 177 and token AND resolved as reduce.
Conflict in state 276 between rule 177 and token OR resolved as reduce.
Conflict in state 276 between rule 177 and token '?' resolved as reduce.
Conflict in state 276 between rule 177 and token '<' resolved as reduce.
Conflict in state 276 between rule 177 and token '>' resolved as reduce.
Conflict in state 276 between rule 177 and token NE resolved as reduce.
Conflict in state 276 between rule 177 and token '+' resolved as reduce.
Conflict in state 276 between rule 177 and token '-' resolved as reduce.
Conflict in state 276 between rule 177 and token MULOP resolved as reduce.
Conflict in state 276 between rule 177 and token '/' resolved as reduce.
Conflict in state 276 between rule 177 and token '%' resolved as reduce.
Conflict in state 276 between rule 177 and token POWOP resolved as shift.
Conflict in state 349 between rule 171 and token ASSIGNOP resolved as reduce.
Conflict in state 349 between rule 171 and token STRING_EQ resolved as shift.
Conflict in state 349 between rule 171 and token STRING_NE resolved as shift.
Conflict in state 349 between rule 171 and token DOT resolved as shift.
Conflict in state 349 between rule 171 and token EQ resolved as shift.
Conflict in state 349 between rule 171 and token LE resolved as shift.
Conflict in state 349 between rule 171 and token GE resolved as shift.
Conflict in state 349 between rule 171 and token AND resolved as reduce.
Conflict in state 349 between rule 171 and token OR resolved as reduce.
Conflict in state 349 between rule 171 and token '?' resolved as shift.
Conflict in state 349 between rule 171 and token '<' resolved as shift.
Conflict in state 349 between rule 171 and token '>' resolved as shift.
Conflict in state 349 between rule 171 and token NE resolved as shift.
Conflict in state 349 between rule 171 and token '+' resolved as shift.
Conflict in state 349 between rule 171 and token '-' resolved as shift.
Conflict in state 349 between rule 171 and token MULOP resolved as shift.
Conflict in state 349 between rule 171 and token '/' resolved as shift.
Conflict in state 349 between rule 171 and token '%' resolved as shift.
Conflict in state 349 between rule 171 and token POWOP resolved as shift.


State 7 contains 24 shift/reduce conflicts.
State 21 contains 1 shift/reduce conflict.
State 22 contains 1 shift/reduce conflict.
State 39 contains 2 shift/reduce conflicts.
State 40 contains 2 shift/reduce conflicts.
State 119 contains 5 reduce/reduce conflicts.
State 173 contains 4 shift/reduce conflicts.
State 238 contains 2 shift/reduce conflicts.
State 345 contains 4 shift/reduce conflicts.
State 347 contains 4 shift/reduce conflicts.


Grammar

  Number, Line, Rule
    1 1909 start -> cmds
    2 1914 cmds -> cmd
    3 1915 cmds -> cmds cmd
    4 1919 cmds -> cmds error
    5 1924 cmd -> SC
    6 1925 cmd -> single_cmd SC
    7 1994 cmd -> trailing_if SC
    8 1995 cmd -> trailing_unless SC
    9 1996 cmd -> trailing_while SC
   10 1997 cmd -> trailing_until SC
   11 1998 cmd -> if_block
   12 1999 cmd -> loop
   13 2000 cmd -> define_sub
   14 2001 cmd -> define_cmd
   15 2005 single_cmd -> expr_cmd
   16 2012 single_cmd -> return_cmd
   17 2018 single_cmd -> skip_cmd
   18 2024 single_cmd -> next_cmd
   19 2030 single_cmd -> last_cmd
   20 2036 single_cmd -> C_command
   21 2042 single_cmd -> my_var_list
   22 2048 single_cmd -> package
   23 2054 single_cmd -> print
   24 2060 single_cmd -> printf
   25 2066 single_cmd -> query
   26 2072 single_cmd -> read_grid
   27 2078 single_cmd -> read_columns
   28 2084 single_cmd -> read_var_list
   29 2090 single_cmd -> split
   30 2096 single_cmd -> use
   31 2102 single_cmd -> a_user_cmd
   32 2112 expr_cmd -> expr
   33 2116 last_cmd -> LAST
   34 2122 next_cmd -> NEXT
   35 2128 return_cmd -> RETURN
   36 2131 return_cmd -> RETURN expr
   37 2136 words -> WORD
   38 2137 words -> words WORD
   39 2141 cmd_words -> CMDWORD
   40 2149 cmd_words -> cmd_words CMDWORD
   41 2160 C_command -> EXECUTE STRING BOOL STRING '(' r_paren
   42 2193 var_list_comma -> VARIABLE
   43 2196 var_list_comma -> var_list_comma ',' VARIABLE
   44 2202 var_list_nocomma -> VARIABLE
   45 2205 var_list_nocomma -> var_list_nocomma VARIABLE
   46 2211 my_var_list -> MY VARIABLE
   47 2217 my_var_list -> MY var_list_comma
   48 2227 my_var_list -> MY '(' var_list_comma ')'
   49 2237 my_var_list -> MY ARRAY
   50 2243 my_var_list -> MY VARIABLE ASSIGNOP expr
   51 2260 package -> PACKAGE CMDWORD
   52 2268 use -> USE CMDWORD
   53 2277 print -> PRINT listexpr
   54 2281 print -> PRINT CMDWORD listexpr
   55 2285 print -> PRINT COLUMNS
   56 2289 print -> PRINT cmd_words
   57 2310 print -> PRINT
   58 2321 printf -> PRINTF listexpr
   59 2325 printf -> PRINTF CMDWORD listexpr
   60 2332 query -> QUERY VARIABLE
   61 2341 query -> QUERY VARIABLE STRING
   62 2351 query -> QUERY VARIABLE STRING '(' listexpr r_paren
   63 2364 read_columns_spec_list -> read_columns_spec
   64 2365 read_columns_spec_list -> read_columns_spec_list read_columns_spec
   65 2370 read_columns_spec -> WORD COLUMN_IDENT expr
   66 2375 read_columns_spec -> STRING COLUMN_IDENT expr
   67 2380 read_columns_spec -> WORD
   68 2389 read_columns -> READ COLUMNS read_columns_spec_list
   69 2392 read_columns -> READ COLUMNS read_columns_spec_list expr
   70 2395 read_columns -> READ COLUMNS WORD read_columns_spec_list
   71 2398 read_columns -> READ COLUMNS WORD read_columns_spec_list expr
   72 2408 read_grid -> READ READ_GRID WORD
   73 2412 read_grid -> READ READ_GRID WORD listexpr_nocomma
   74 2416 read_grid -> READ READ_GRID WORD words
   75 2422 read_grid -> READ READ_GRID WORD words listexpr_nocomma
   76 2431 read_var_list -> READ WORD var_list_nocomma
   77 2435 read_var_list -> READ var_list_nocomma
   78 2442 split -> SPLIT
   79 2447 split -> ARRAY ASSIGNOP SPLIT
   80 2472 loop -> do_while_block
   81 2473 loop -> do_until_block
   82 2474 loop -> while_block
   83 2475 loop -> until_block
   84 2476 loop -> for_block
   85 2477 loop -> foreach_block
   86 2482 if_block -> IF expr block ELSE block
   87 2486 if_block -> IF expr block
   88 2490 if_block -> UNLESS expr block ELSE block
   89 2494 if_block -> UNLESS expr block
   90 2501 block -> start_of_block cmds end_of_block
   91 2506 start_of_block -> '{'
   92 2513 end_of_block -> '}'
   93 2519 trailing_if -> single_cmd IF expr
   94 2525 trailing_unless -> single_cmd UNLESS expr
   95 2531 trailing_while -> single_cmd WHILE expr
   96 2537 trailing_until -> single_cmd UNTIL expr
   97 2543 while_context -> /* empty */
   98 2546 while_block -> WHILE while_context texpr block
   99 2552 until_block -> UNTIL while_context texpr block
  100 2558 do_while_block -> DO block WHILE texpr SC
  101 2564 do_until_block -> DO block UNTIL texpr SC
  102 2570 for_block -> FOR '(' expr ';' texpr ';' expr r_paren block
  103 2577 foreach_block -> FOREACH VARIABLE '(' listexpr r_paren block
  104 2582 foreach_block -> FOREACH VARIABLE '(' ARRAY r_paren block
  105 2590 define_sub -> SUB words block
  106 2601 define_sub -> SUB words '(' PROTOTYPE r_paren block
  107 2615 define_cmd -> CMD words '(' PROTOTYPE r_paren block
  108 2623 define_cmd -> CMD words '(' PROTOTYPE r_paren
  109 2634 a_user_cmd -> cmd_words
  110 2638 a_user_cmd -> cmd_words listexpr_nocomma
  111 2645 listexpr_nocomma -> expr
  112 2646 listexpr_nocomma -> listexpr_nocomma expr
  113 2650 skip_cmd -> SKIP
  114 2656 skip_cmd -> SKIP '(' WORD ')'
  115 2662 skip_cmd -> SKIP '(' WORD expr ')'
  116 2670 texpr -> /* empty */
  117 2671 texpr -> expr
  118 2675 expr -> NUM
  119 2676 expr -> S_FROM S_TO
  120 2684 @1 -> /* empty */
  121 2684 expr -> '/' @1 MATCH_STRING END_MATCH_STRING
  122 2691 expr -> CHOP
  123 2695 expr -> CHOP VARIABLE
  124 2699 expr -> CHOP '(' VARIABLE ')'
  125 2703 expr -> CHOMP
  126 2707 expr -> CHOMP VARIABLE
  127 2711 expr -> CHOMP '(' VARIABLE ')'
  128 2715 expr -> DIE
  129 2719 expr -> DIE expr
  130 2723 expr -> EXIT expr
  131 2729 expr -> GLOB '(' expr ')'
  132 2733 expr -> INDEX '(' expr ',' expr ')'
  133 2737 expr -> INDEX '(' expr ',' expr ',' expr ')'
  134 2741 expr -> WARN expr
  135 2745 expr -> '<' '>'
  136 2749 expr -> '<' words '>'
  137 2755 expr -> FILE_TEST expr
  138 2759 expr -> SYSTEM '(' expr ')'
  139 2763 expr -> SUBSTR '(' expr ',' expr ',' expr ')'
  140 2767 expr -> SUBSTR '(' expr ',' expr ')'
  141 2771 expr -> SPRINTF '(' listexpr ')'
  142 2776 expr -> REWIND '(' ')'
  143 2780 expr -> REWIND
  144 2784 expr -> REWIND WORD
  145 2788 expr -> REWIND '(' WORD ')'
  146 2792 expr -> OPEN WORD
  147 2796 expr -> OPEN expr
  148 2800 expr -> OPEN '(' WORD ',' expr ')'
  149 2823 expr -> CLOSE
  150 2824 expr -> CLOSE WORD
  151 2825 expr -> CLOSE '(' WORD ')'
  152 2826 expr -> VARIABLE
  153 2827 expr -> VARIABLE_END
  154 2828 expr -> PATTERN_VARIABLE
  155 2829 expr -> ARRAY ASSIGNOP '(' listexpr ')'
  156 2852 expr -> expr ASSIGNOP expr
  157 2870 expr -> UNLINK '(' listexpr ')'
  158 2874 expr -> VARIABLE '[' expr ']'
  159 2877 expr -> STRING
  160 2878 expr -> expr DOT expr
  161 2891 expr -> expr STRING_EQ expr
  162 2892 expr -> expr STRING_NE expr
  163 2894 expr -> expr '<' expr
  164 2895 expr -> expr LE expr
  165 2896 expr -> expr '>' expr
  166 2897 expr -> expr EQ expr
  167 2898 expr -> expr NE expr
  168 2899 expr -> expr GE expr
  169 2900 expr -> expr OR expr
  170 2901 expr -> expr AND expr
  171 2902 expr -> expr '?' expr ':' expr
  172 2906 expr -> expr '+' expr
  173 2915 expr -> expr '-' expr
  174 2924 expr -> expr MULOP expr
  175 2933 expr -> expr '/' expr
  176 2942 expr -> expr '%' expr
  177 2951 expr -> expr POWOP expr
  178 2960 expr -> NOT expr
  179 2961 expr -> '(' expr r_paren
  180 2962 expr -> FUNCTION_USER '(' ')'
  181 2968 expr -> FUNCTION_USER '(' listexpr ')'
  182 2974 expr -> FUNCTION_BUILTIN_NUMERIC '(' ')'
  183 2980 expr -> FUNCTION_BUILTIN_NUMERIC '(' listexpr ')'
  184 2986 expr -> FUNCTION_BUILTIN_TEXT '(' expr ')'
  185 2994 expr -> FUNCTION_BUILTIN_TEXT '(' expr ',' expr ')'
  186 3003 expr -> '-' expr
  187 3004 expr -> '+' expr
  188 3005 expr -> VARIABLE POSTDEC
  189 3006 expr -> VARIABLE POSTINC
  190 3007 expr -> VARIABLE '[' expr ']' POSTDEC
  191 3010 expr -> VARIABLE '[' expr ']' POSTINC
  192 3016 r_paren -> ')'
  193 3020 SC -> ';'
  194 3025 listexpr -> expr
  195 3026 listexpr -> listexpr ',' expr


Terminals, with rules where they appear

$ (-1)
'%' (37) 176
'(' (40) 41 48 62 102 103 104 106 107 108 114 115 124 127 131 132 133
    138 139 140 141 142 145 148 151 155 157 179 180 181 182 183 184
    185
')' (41) 48 114 115 124 127 131 132 133 138 139 140 141 142 145 148
    151 155 157 180 181 182 183 184 185 192
'+' (43) 172 187
',' (44) 43 132 133 139 140 148 185 195
'-' (45) 173 186
'/' (47) 121 175
':' (58) 171
';' (59) 102 193
'<' (60) 135 136 163
'>' (62) 135 136 165
'?' (63) 171
'[' (91) 158 190 191
']' (93) 158 190 191
'{' (123) 91
'}' (125) 92
error (256) 4
NUM (257) 118
ARRAY (258) 49 79 104 155
PATTERN_VARIABLE (259) 154
VARIABLE (260) 42 43 44 45 46 50 60 61 62 103 104 123 124 126 127 152
    158 188 189 190 191
VARIABLE_END (261) 153
COLUMN_IDENT (262) 65 66
ASSIGNOP (263) 50 79 155 156
END_MATCH_STRING (264) 121
BOOL (265) 41
CMD (266) 107 108
DIE (267) 128 129
EXIT (268) 130
WARN (269) 134
DO (270) 100 101
ELSE (271) 86 88
EXECUTE (272) 41
FOR (273) 102
FOREACH (274) 103 104
FILE_TEST (275) 137
GLOB (276) 131
IF (277) 86 87 93
INDEX (278) 132 133
LAST (279) 33
NEXT (280) 34
RETURN (281) 35 36
CHOMP (282) 125 126 127
CHOP (283) 122 123 124
READ_GRID (284) 72 73 74 75
COLUMNS (285) 55 68 69 70 71
MY (286) 46 47 48 49 50
PACKAGE (287) 51
USE (288) 52
SKIP (289) 113 114 115
SPLIT (290) 78 79
STRING_EQ (291) 161
STRING_NE (292) 162
SUB (293) 105 106
SUBSTR (294) 139 140
SPRINTF (295) 141
SYSTEM (296) 138
UNLESS (297) 88 89 94
UNLINK (298) 157
WHILE (299) 95 98 100
UNTIL (300) 96 99 101
PRINT (301) 53 54 55 56 57
PRINTF (302) 58 59
OPEN (303) 146 147 148
REWIND (304) 142 143 144 145
CLOSE (305) 149 150 151
QUERY (306) 60 61 62
READ (307) 68 69 70 71 72 73 74 75 76 77
DOT (308) 160
EQ (309) 166
LE (310) 164
GE (311) 168
NOT (312) 178
AND (313) 170
OR (314) 169
WORD (315) 37 38 65 67 70 71 72 73 74 75 76 114 115 144 145 146 148
    150 151
CMDWORD (316) 39 40 51 52 54 59
PROTOTYPE (317) 106 107 108
FUNCTION_BUILTIN_NUMERIC (318) 182 183
FUNCTION_BUILTIN_TEXT (319) 184 185
FUNCTION_USER (320) 180 181
STRING (321) 41 61 62 66 159
MATCH_STRING (322) 121
S_FROM (323) 119
S_TO (324) 119
NE (325) 167
MULOP (326) 174
UNARY (327)
POWOP (328) 177
POSTINC (329) 189 191
POSTDEC (330) 188 190


Nonterminals, with rules where they appear

start (93)
    on left: 1
cmds (94)
    on left: 2 3 4, on right: 1 3 4 90
cmd (95)
    on left: 5 6 7 8 9 10 11 12 13 14, on right: 2 3
single_cmd (96)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31,
    on right: 6 93 94 95 96
expr_cmd (97)
    on left: 32, on right: 15
last_cmd (98)
    on left: 33, on right: 19
next_cmd (99)
    on left: 34, on right: 18
return_cmd (100)
    on left: 35 36, on right: 16
words (101)
    on left: 37 38, on right: 38 74 75 105 106 107 108 136
cmd_words (102)
    on left: 39 40, on right: 40 56 109 110
C_command (103)
    on left: 41, on right: 20
var_list_comma (104)
    on left: 42 43, on right: 43 47 48
var_list_nocomma (105)
    on left: 44 45, on right: 45 76 77
my_var_list (106)
    on left: 46 47 48 49 50, on right: 21
package (107)
    on left: 51, on right: 22
use (108)
    on left: 52, on right: 30
print (109)
    on left: 53 54 55 56 57, on right: 23
printf (110)
    on left: 58 59, on right: 24
query (111)
    on left: 60 61 62, on right: 25
read_columns_spec_list (112)
    on left: 63 64, on right: 64 68 69 70 71
read_columns_spec (113)
    on left: 65 66 67, on right: 63 64
read_columns (114)
    on left: 68 69 70 71, on right: 27
read_grid (115)
    on left: 72 73 74 75, on right: 26
read_var_list (116)
    on left: 76 77, on right: 28
split (117)
    on left: 78 79, on right: 29
loop (118)
    on left: 80 81 82 83 84 85, on right: 12
if_block (119)
    on left: 86 87 88 89, on right: 11
block (120)
    on left: 90, on right: 86 87 88 89 98 99 100 101 102 103 104 105
    106 107
start_of_block (121)
    on left: 91, on right: 90
end_of_block (122)
    on left: 92, on right: 90
trailing_if (123)
    on left: 93, on right: 7
trailing_unless (124)
    on left: 94, on right: 8
trailing_while (125)
    on left: 95, on right: 9
trailing_until (126)
    on left: 96, on right: 10
while_context (127)
    on left: 97, on right: 98 99
while_block (128)
    on left: 98, on right: 82
until_block (129)
    on left: 99, on right: 83
do_while_block (130)
    on left: 100, on right: 80
do_until_block (131)
    on left: 101, on right: 81
for_block (132)
    on left: 102, on right: 84
foreach_block (133)
    on left: 103 104, on right: 85
define_sub (134)
    on left: 105 106, on right: 13
define_cmd (135)
    on left: 107 108, on right: 14
a_user_cmd (136)
    on left: 109 110, on right: 31
listexpr_nocomma (137)
    on left: 111 112, on right: 73 75 110 112
skip_cmd (138)
    on left: 113 114 115, on right: 17
texpr (139)
    on left: 116 117, on right: 98 99 100 101 102
expr (140)
    on left: 118 119 121 122 123 124 125 126 127 128 129 130 131 132
    133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148
    149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164
    165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180
    181 182 183 184 185 186 187 188 189 190 191, on right: 32 36 50
    65 66 69 71 86 87 88 89 93 94 95 96 102 111 112 115 117 129 130
    131 132 133 134 137 138 139 140 147 148 156 158 160 161 162 163
    164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
    184 185 186 187 190 191 194 195
@1 (141)
    on left: 120, on right: 121
r_paren (142)
    on left: 192, on right: 41 62 102 103 104 106 107 108 179
SC (143)
    on left: 193, on right: 5 6 7 8 9 10 100 101
listexpr (144)
    on left: 194 195, on right: 53 54 58 59 62 103 141 155 157 181
    183 195


state 0

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 2
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    CMD 	shift, and go to state 6
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    DO  	shift, and go to state 10
    EXECUTE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    IF  	shift, and go to state 16
    INDEX	shift, and go to state 17
    LAST	shift, and go to state 18
    NEXT	shift, and go to state 19
    RETURN	shift, and go to state 20
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    MY  	shift, and go to state 23
    PACKAGE	shift, and go to state 24
    USE 	shift, and go to state 25
    SKIP	shift, and go to state 26
    SPLIT	shift, and go to state 27
    SUB 	shift, and go to state 28
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLESS	shift, and go to state 32
    UNLINK	shift, and go to state 33
    WHILE	shift, and go to state 34
    UNTIL	shift, and go to state 35
    PRINT	shift, and go to state 36
    PRINTF	shift, and go to state 37
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    QUERY	shift, and go to state 41
    READ	shift, and go to state 42
    NOT 	shift, and go to state 43
    CMDWORD	shift, and go to state 44
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54
    ';' 	shift, and go to state 55

    start	go to state 370
    cmds	go to state 56
    cmd 	go to state 57
    single_cmd	go to state 58
    expr_cmd	go to state 59
    last_cmd	go to state 60
    next_cmd	go to state 61
    return_cmd	go to state 62
    cmd_words	go to state 63
    C_command	go to state 64
    my_var_list	go to state 65
    package	go to state 66
    use 	go to state 67
    print	go to state 68
    printf	go to state 69
    query	go to state 70
    read_columns	go to state 71
    read_grid	go to state 72
    read_var_list	go to state 73
    split	go to state 74
    loop	go to state 75
    if_block	go to state 76
    trailing_if	go to state 77
    trailing_unless	go to state 78
    trailing_while	go to state 79
    trailing_until	go to state 80
    while_block	go to state 81
    until_block	go to state 82
    do_while_block	go to state 83
    do_until_block	go to state 84
    for_block	go to state 85
    foreach_block	go to state 86
    define_sub	go to state 87
    define_cmd	go to state 88
    a_user_cmd	go to state 89
    skip_cmd	go to state 90
    expr	go to state 91
    SC  	go to state 92



state 1

    expr  ->  NUM .   (rule 118)

    $default	reduce using rule 118 (expr)



state 2

    split  ->  ARRAY . ASSIGNOP SPLIT   (rule 79)
    expr  ->  ARRAY . ASSIGNOP '(' listexpr ')'   (rule 155)

    ASSIGNOP	shift, and go to state 93



state 3

    expr  ->  PATTERN_VARIABLE .   (rule 154)

    $default	reduce using rule 154 (expr)



state 4

    expr  ->  VARIABLE .   (rule 152)
    expr  ->  VARIABLE . '[' expr ']'   (rule 158)
    expr  ->  VARIABLE . POSTDEC   (rule 188)
    expr  ->  VARIABLE . POSTINC   (rule 189)
    expr  ->  VARIABLE . '[' expr ']' POSTDEC   (rule 190)
    expr  ->  VARIABLE . '[' expr ']' POSTINC   (rule 191)

    POSTINC	shift, and go to state 94
    POSTDEC	shift, and go to state 95
    '[' 	shift, and go to state 96

    $default	reduce using rule 152 (expr)



state 5

    expr  ->  VARIABLE_END .   (rule 153)

    $default	reduce using rule 153 (expr)



state 6

    define_cmd  ->  CMD . words '(' PROTOTYPE r_paren block   (rule 107)
    define_cmd  ->  CMD . words '(' PROTOTYPE r_paren   (rule 108)

    WORD	shift, and go to state 97

    words	go to state 98



state 7

    expr  ->  DIE .   (rule 128)
    expr  ->  DIE . expr   (rule 129)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    NUM 	[reduce using rule 128 (expr)]
    ARRAY	[reduce using rule 128 (expr)]
    PATTERN_VARIABLE	[reduce using rule 128 (expr)]
    VARIABLE	[reduce using rule 128 (expr)]
    VARIABLE_END	[reduce using rule 128 (expr)]
    DIE 	[reduce using rule 128 (expr)]
    EXIT	[reduce using rule 128 (expr)]
    WARN	[reduce using rule 128 (expr)]
    GLOB	[reduce using rule 128 (expr)]
    INDEX	[reduce using rule 128 (expr)]
    CHOMP	[reduce using rule 128 (expr)]
    CHOP	[reduce using rule 128 (expr)]
    SUBSTR	[reduce using rule 128 (expr)]
    SPRINTF	[reduce using rule 128 (expr)]
    SYSTEM	[reduce using rule 128 (expr)]
    UNLINK	[reduce using rule 128 (expr)]
    OPEN	[reduce using rule 128 (expr)]
    REWIND	[reduce using rule 128 (expr)]
    CLOSE	[reduce using rule 128 (expr)]
    FUNCTION_BUILTIN_NUMERIC	[reduce using rule 128 (expr)]
    FUNCTION_BUILTIN_TEXT	[reduce using rule 128 (expr)]
    FUNCTION_USER	[reduce using rule 128 (expr)]
    STRING	[reduce using rule 128 (expr)]
    S_FROM	[reduce using rule 128 (expr)]
    $default	reduce using rule 128 (expr)

    expr	go to state 100



state 8

    expr  ->  EXIT . expr   (rule 130)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 101



state 9

    expr  ->  WARN . expr   (rule 134)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 102



state 10

    do_while_block  ->  DO . block WHILE texpr SC   (rule 100)
    do_until_block  ->  DO . block UNTIL texpr SC   (rule 101)

    '{' 	shift, and go to state 103

    block	go to state 104
    start_of_block	go to state 105



state 11

    C_command  ->  EXECUTE . STRING BOOL STRING '(' r_paren   (rule 41)

    STRING	shift, and go to state 106



state 12

    for_block  ->  FOR . '(' expr ';' texpr ';' expr r_paren block   (rule 102)

    '(' 	shift, and go to state 107



state 13

    foreach_block  ->  FOREACH . VARIABLE '(' listexpr r_paren block   (rule 103)
    foreach_block  ->  FOREACH . VARIABLE '(' ARRAY r_paren block   (rule 104)

    VARIABLE	shift, and go to state 108



state 14

    expr  ->  FILE_TEST . expr   (rule 137)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 109



state 15

    expr  ->  GLOB . '(' expr ')'   (rule 131)

    '(' 	shift, and go to state 110



state 16

    if_block  ->  IF . expr block ELSE block   (rule 86)
    if_block  ->  IF . expr block   (rule 87)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 111



state 17

    expr  ->  INDEX . '(' expr ',' expr ')'   (rule 132)
    expr  ->  INDEX . '(' expr ',' expr ',' expr ')'   (rule 133)

    '(' 	shift, and go to state 112



state 18

    last_cmd  ->  LAST .   (rule 33)

    $default	reduce using rule 33 (last_cmd)



state 19

    next_cmd  ->  NEXT .   (rule 34)

    $default	reduce using rule 34 (next_cmd)



state 20

    return_cmd  ->  RETURN .   (rule 35)
    return_cmd  ->  RETURN . expr   (rule 36)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    $default	reduce using rule 35 (return_cmd)

    expr	go to state 113



state 21

    expr  ->  CHOMP .   (rule 125)
    expr  ->  CHOMP . VARIABLE   (rule 126)
    expr  ->  CHOMP . '(' VARIABLE ')'   (rule 127)

    VARIABLE	shift, and go to state 114
    '(' 	shift, and go to state 115

    VARIABLE	[reduce using rule 125 (expr)]
    $default	reduce using rule 125 (expr)



state 22

    expr  ->  CHOP .   (rule 122)
    expr  ->  CHOP . VARIABLE   (rule 123)
    expr  ->  CHOP . '(' VARIABLE ')'   (rule 124)

    VARIABLE	shift, and go to state 116
    '(' 	shift, and go to state 117

    VARIABLE	[reduce using rule 122 (expr)]
    $default	reduce using rule 122 (expr)



state 23

    my_var_list  ->  MY . VARIABLE   (rule 46)
    my_var_list  ->  MY . var_list_comma   (rule 47)
    my_var_list  ->  MY . '(' var_list_comma ')'   (rule 48)
    my_var_list  ->  MY . ARRAY   (rule 49)
    my_var_list  ->  MY . VARIABLE ASSIGNOP expr   (rule 50)

    ARRAY	shift, and go to state 118
    VARIABLE	shift, and go to state 119
    '(' 	shift, and go to state 120

    var_list_comma	go to state 121



state 24

    package  ->  PACKAGE . CMDWORD   (rule 51)

    CMDWORD	shift, and go to state 122



state 25

    use  ->  USE . CMDWORD   (rule 52)

    CMDWORD	shift, and go to state 123



state 26

    skip_cmd  ->  SKIP .   (rule 113)
    skip_cmd  ->  SKIP . '(' WORD ')'   (rule 114)
    skip_cmd  ->  SKIP . '(' WORD expr ')'   (rule 115)

    '(' 	shift, and go to state 124

    $default	reduce using rule 113 (skip_cmd)



state 27

    split  ->  SPLIT .   (rule 78)

    $default	reduce using rule 78 (split)



state 28

    define_sub  ->  SUB . words block   (rule 105)
    define_sub  ->  SUB . words '(' PROTOTYPE r_paren block   (rule 106)

    WORD	shift, and go to state 97

    words	go to state 125



state 29

    expr  ->  SUBSTR . '(' expr ',' expr ',' expr ')'   (rule 139)
    expr  ->  SUBSTR . '(' expr ',' expr ')'   (rule 140)

    '(' 	shift, and go to state 126



state 30

    expr  ->  SPRINTF . '(' listexpr ')'   (rule 141)

    '(' 	shift, and go to state 127



state 31

    expr  ->  SYSTEM . '(' expr ')'   (rule 138)

    '(' 	shift, and go to state 128



state 32

    if_block  ->  UNLESS . expr block ELSE block   (rule 88)
    if_block  ->  UNLESS . expr block   (rule 89)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 129



state 33

    expr  ->  UNLINK . '(' listexpr ')'   (rule 157)

    '(' 	shift, and go to state 130



state 34

    while_block  ->  WHILE . while_context texpr block   (rule 98)

    $default	reduce using rule 97 (while_context)

    while_context	go to state 131



state 35

    until_block  ->  UNTIL . while_context texpr block   (rule 99)

    $default	reduce using rule 97 (while_context)

    while_context	go to state 132



state 36

    print  ->  PRINT . listexpr   (rule 53)
    print  ->  PRINT . CMDWORD listexpr   (rule 54)
    print  ->  PRINT . COLUMNS   (rule 55)
    print  ->  PRINT . cmd_words   (rule 56)
    print  ->  PRINT .   (rule 57)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    COLUMNS	shift, and go to state 133
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    CMDWORD	shift, and go to state 134
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    $default	reduce using rule 57 (print)

    cmd_words	go to state 135
    expr	go to state 136
    listexpr	go to state 137



state 37

    printf  ->  PRINTF . listexpr   (rule 58)
    printf  ->  PRINTF . CMDWORD listexpr   (rule 59)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    CMDWORD	shift, and go to state 138
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 136
    listexpr	go to state 139



state 38

    expr  ->  OPEN . WORD   (rule 146)
    expr  ->  OPEN . expr   (rule 147)
    expr  ->  OPEN . '(' WORD ',' expr ')'   (rule 148)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    WORD	shift, and go to state 140
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 141

    expr	go to state 142



state 39

    expr  ->  REWIND . '(' ')'   (rule 142)
    expr  ->  REWIND .   (rule 143)
    expr  ->  REWIND . WORD   (rule 144)
    expr  ->  REWIND . '(' WORD ')'   (rule 145)

    WORD	shift, and go to state 143
    '(' 	shift, and go to state 144

    WORD	[reduce using rule 143 (expr)]
    '(' 	[reduce using rule 143 (expr)]
    $default	reduce using rule 143 (expr)



state 40

    expr  ->  CLOSE .   (rule 149)
    expr  ->  CLOSE . WORD   (rule 150)
    expr  ->  CLOSE . '(' WORD ')'   (rule 151)

    WORD	shift, and go to state 145
    '(' 	shift, and go to state 146

    WORD	[reduce using rule 149 (expr)]
    '(' 	[reduce using rule 149 (expr)]
    $default	reduce using rule 149 (expr)



state 41

    query  ->  QUERY . VARIABLE   (rule 60)
    query  ->  QUERY . VARIABLE STRING   (rule 61)
    query  ->  QUERY . VARIABLE STRING '(' listexpr r_paren   (rule 62)

    VARIABLE	shift, and go to state 147



state 42

    read_columns  ->  READ . COLUMNS read_columns_spec_list   (rule 68)
    read_columns  ->  READ . COLUMNS read_columns_spec_list expr   (rule 69)
    read_columns  ->  READ . COLUMNS WORD read_columns_spec_list   (rule 70)
    read_columns  ->  READ . COLUMNS WORD read_columns_spec_list expr   (rule 71)
    read_grid  ->  READ . READ_GRID WORD   (rule 72)
    read_grid  ->  READ . READ_GRID WORD listexpr_nocomma   (rule 73)
    read_grid  ->  READ . READ_GRID WORD words   (rule 74)
    read_grid  ->  READ . READ_GRID WORD words listexpr_nocomma   (rule 75)
    read_var_list  ->  READ . WORD var_list_nocomma   (rule 76)
    read_var_list  ->  READ . var_list_nocomma   (rule 77)

    VARIABLE	shift, and go to state 148
    READ_GRID	shift, and go to state 149
    COLUMNS	shift, and go to state 150
    WORD	shift, and go to state 151

    var_list_nocomma	go to state 152



state 43

    expr  ->  NOT . expr   (rule 178)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 153



state 44

    cmd_words  ->  CMDWORD .   (rule 39)

    $default	reduce using rule 39 (cmd_words)



state 45

    expr  ->  FUNCTION_BUILTIN_NUMERIC . '(' ')'   (rule 182)
    expr  ->  FUNCTION_BUILTIN_NUMERIC . '(' listexpr ')'   (rule 183)

    '(' 	shift, and go to state 154



state 46

    expr  ->  FUNCTION_BUILTIN_TEXT . '(' expr ')'   (rule 184)
    expr  ->  FUNCTION_BUILTIN_TEXT . '(' expr ',' expr ')'   (rule 185)

    '(' 	shift, and go to state 155



state 47

    expr  ->  FUNCTION_USER . '(' ')'   (rule 180)
    expr  ->  FUNCTION_USER . '(' listexpr ')'   (rule 181)

    '(' 	shift, and go to state 156



state 48

    expr  ->  STRING .   (rule 159)

    $default	reduce using rule 159 (expr)



state 49

    expr  ->  S_FROM . S_TO   (rule 119)

    S_TO	shift, and go to state 157



state 50

    expr  ->  '<' . '>'   (rule 135)
    expr  ->  '<' . words '>'   (rule 136)

    WORD	shift, and go to state 97
    '>' 	shift, and go to state 158

    words	go to state 159



state 51

    expr  ->  '+' . expr   (rule 187)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 160



state 52

    expr  ->  '-' . expr   (rule 186)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 161



state 53

    expr  ->  '/' . @1 MATCH_STRING END_MATCH_STRING   (rule 121)

    $default	reduce using rule 120 (@1)

    @1  	go to state 162



state 54

    expr  ->  '(' . expr r_paren   (rule 179)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 163



state 55

    SC  ->  ';' .   (rule 193)

    $default	reduce using rule 193 (SC)



state 56

    start  ->  cmds .   (rule 1)
    cmds  ->  cmds . cmd   (rule 3)
    cmds  ->  cmds . error   (rule 4)

    error	shift, and go to state 164
    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 2
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    CMD 	shift, and go to state 6
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    DO  	shift, and go to state 10
    EXECUTE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    IF  	shift, and go to state 16
    INDEX	shift, and go to state 17
    LAST	shift, and go to state 18
    NEXT	shift, and go to state 19
    RETURN	shift, and go to state 20
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    MY  	shift, and go to state 23
    PACKAGE	shift, and go to state 24
    USE 	shift, and go to state 25
    SKIP	shift, and go to state 26
    SPLIT	shift, and go to state 27
    SUB 	shift, and go to state 28
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLESS	shift, and go to state 32
    UNLINK	shift, and go to state 33
    WHILE	shift, and go to state 34
    UNTIL	shift, and go to state 35
    PRINT	shift, and go to state 36
    PRINTF	shift, and go to state 37
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    QUERY	shift, and go to state 41
    READ	shift, and go to state 42
    NOT 	shift, and go to state 43
    CMDWORD	shift, and go to state 44
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54
    ';' 	shift, and go to state 55

    $   	reduce using rule 1 (start)
    cmd 	go to state 165
    single_cmd	go to state 58
    expr_cmd	go to state 59
    last_cmd	go to state 60
    next_cmd	go to state 61
    return_cmd	go to state 62
    cmd_words	go to state 63
    C_command	go to state 64
    my_var_list	go to state 65
    package	go to state 66
    use 	go to state 67
    print	go to state 68
    printf	go to state 69
    query	go to state 70
    read_columns	go to state 71
    read_grid	go to state 72
    read_var_list	go to state 73
    split	go to state 74
    loop	go to state 75
    if_block	go to state 76
    trailing_if	go to state 77
    trailing_unless	go to state 78
    trailing_while	go to state 79
    trailing_until	go to state 80
    while_block	go to state 81
    until_block	go to state 82
    do_while_block	go to state 83
    do_until_block	go to state 84
    for_block	go to state 85
    foreach_block	go to state 86
    define_sub	go to state 87
    define_cmd	go to state 88
    a_user_cmd	go to state 89
    skip_cmd	go to state 90
    expr	go to state 91
    SC  	go to state 92



state 57

    cmds  ->  cmd .   (rule 2)

    $default	reduce using rule 2 (cmds)



state 58

    cmd  ->  single_cmd . SC   (rule 6)
    trailing_if  ->  single_cmd . IF expr   (rule 93)
    trailing_unless  ->  single_cmd . UNLESS expr   (rule 94)
    trailing_while  ->  single_cmd . WHILE expr   (rule 95)
    trailing_until  ->  single_cmd . UNTIL expr   (rule 96)

    IF  	shift, and go to state 166
    UNLESS	shift, and go to state 167
    WHILE	shift, and go to state 168
    UNTIL	shift, and go to state 169
    ';' 	shift, and go to state 55

    SC  	go to state 170



state 59

    single_cmd  ->  expr_cmd .   (rule 15)

    $default	reduce using rule 15 (single_cmd)



state 60

    single_cmd  ->  last_cmd .   (rule 19)

    $default	reduce using rule 19 (single_cmd)



state 61

    single_cmd  ->  next_cmd .   (rule 18)

    $default	reduce using rule 18 (single_cmd)



state 62

    single_cmd  ->  return_cmd .   (rule 16)

    $default	reduce using rule 16 (single_cmd)



state 63

    cmd_words  ->  cmd_words . CMDWORD   (rule 40)
    a_user_cmd  ->  cmd_words .   (rule 109)
    a_user_cmd  ->  cmd_words . listexpr_nocomma   (rule 110)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    CMDWORD	shift, and go to state 171
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    $default	reduce using rule 109 (a_user_cmd)

    listexpr_nocomma	go to state 172
    expr	go to state 173



state 64

    single_cmd  ->  C_command .   (rule 20)

    $default	reduce using rule 20 (single_cmd)



state 65

    single_cmd  ->  my_var_list .   (rule 21)

    $default	reduce using rule 21 (single_cmd)



state 66

    single_cmd  ->  package .   (rule 22)

    $default	reduce using rule 22 (single_cmd)



state 67

    single_cmd  ->  use .   (rule 30)

    $default	reduce using rule 30 (single_cmd)



state 68

    single_cmd  ->  print .   (rule 23)

    $default	reduce using rule 23 (single_cmd)



state 69

    single_cmd  ->  printf .   (rule 24)

    $default	reduce using rule 24 (single_cmd)



state 70

    single_cmd  ->  query .   (rule 25)

    $default	reduce using rule 25 (single_cmd)



state 71

    single_cmd  ->  read_columns .   (rule 27)

    $default	reduce using rule 27 (single_cmd)



state 72

    single_cmd  ->  read_grid .   (rule 26)

    $default	reduce using rule 26 (single_cmd)



state 73

    single_cmd  ->  read_var_list .   (rule 28)

    $default	reduce using rule 28 (single_cmd)



state 74

    single_cmd  ->  split .   (rule 29)

    $default	reduce using rule 29 (single_cmd)



state 75

    cmd  ->  loop .   (rule 12)

    $default	reduce using rule 12 (cmd)



state 76

    cmd  ->  if_block .   (rule 11)

    $default	reduce using rule 11 (cmd)



state 77

    cmd  ->  trailing_if . SC   (rule 7)

    ';' 	shift, and go to state 55

    SC  	go to state 174



state 78

    cmd  ->  trailing_unless . SC   (rule 8)

    ';' 	shift, and go to state 55

    SC  	go to state 175



state 79

    cmd  ->  trailing_while . SC   (rule 9)

    ';' 	shift, and go to state 55

    SC  	go to state 176



state 80

    cmd  ->  trailing_until . SC   (rule 10)

    ';' 	shift, and go to state 55

    SC  	go to state 177



state 81

    loop  ->  while_block .   (rule 82)

    $default	reduce using rule 82 (loop)



state 82

    loop  ->  until_block .   (rule 83)

    $default	reduce using rule 83 (loop)



state 83

    loop  ->  do_while_block .   (rule 80)

    $default	reduce using rule 80 (loop)



state 84

    loop  ->  do_until_block .   (rule 81)

    $default	reduce using rule 81 (loop)



state 85

    loop  ->  for_block .   (rule 84)

    $default	reduce using rule 84 (loop)



state 86

    loop  ->  foreach_block .   (rule 85)

    $default	reduce using rule 85 (loop)



state 87

    cmd  ->  define_sub .   (rule 13)

    $default	reduce using rule 13 (cmd)



state 88

    cmd  ->  define_cmd .   (rule 14)

    $default	reduce using rule 14 (cmd)



state 89

    single_cmd  ->  a_user_cmd .   (rule 31)

    $default	reduce using rule 31 (single_cmd)



state 90

    single_cmd  ->  skip_cmd .   (rule 17)

    $default	reduce using rule 17 (single_cmd)



state 91

    expr_cmd  ->  expr .   (rule 32)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    $default	reduce using rule 32 (expr_cmd)



state 92

    cmd  ->  SC .   (rule 5)

    $default	reduce using rule 5 (cmd)



state 93

    split  ->  ARRAY ASSIGNOP . SPLIT   (rule 79)
    expr  ->  ARRAY ASSIGNOP . '(' listexpr ')'   (rule 155)

    SPLIT	shift, and go to state 197
    '(' 	shift, and go to state 198



state 94

    expr  ->  VARIABLE POSTINC .   (rule 189)

    $default	reduce using rule 189 (expr)



state 95

    expr  ->  VARIABLE POSTDEC .   (rule 188)

    $default	reduce using rule 188 (expr)



state 96

    expr  ->  VARIABLE '[' . expr ']'   (rule 158)
    expr  ->  VARIABLE '[' . expr ']' POSTDEC   (rule 190)
    expr  ->  VARIABLE '[' . expr ']' POSTINC   (rule 191)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 199



state 97

    words  ->  WORD .   (rule 37)

    $default	reduce using rule 37 (words)



state 98

    words  ->  words . WORD   (rule 38)
    define_cmd  ->  CMD words . '(' PROTOTYPE r_paren block   (rule 107)
    define_cmd  ->  CMD words . '(' PROTOTYPE r_paren   (rule 108)

    WORD	shift, and go to state 200
    '(' 	shift, and go to state 201



state 99

    expr  ->  ARRAY . ASSIGNOP '(' listexpr ')'   (rule 155)

    ASSIGNOP	shift, and go to state 202



state 100

    expr  ->  DIE expr .   (rule 129)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    $default	reduce using rule 129 (expr)



state 101

    expr  ->  EXIT expr .   (rule 130)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    $default	reduce using rule 130 (expr)



state 102

    expr  ->  WARN expr .   (rule 134)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    $default	reduce using rule 134 (expr)



state 103

    start_of_block  ->  '{' .   (rule 91)

    $default	reduce using rule 91 (start_of_block)



state 104

    do_while_block  ->  DO block . WHILE texpr SC   (rule 100)
    do_until_block  ->  DO block . UNTIL texpr SC   (rule 101)

    WHILE	shift, and go to state 203
    UNTIL	shift, and go to state 204



state 105

    block  ->  start_of_block . cmds end_of_block   (rule 90)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 2
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    CMD 	shift, and go to state 6
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    DO  	shift, and go to state 10
    EXECUTE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    IF  	shift, and go to state 16
    INDEX	shift, and go to state 17
    LAST	shift, and go to state 18
    NEXT	shift, and go to state 19
    RETURN	shift, and go to state 20
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    MY  	shift, and go to state 23
    PACKAGE	shift, and go to state 24
    USE 	shift, and go to state 25
    SKIP	shift, and go to state 26
    SPLIT	shift, and go to state 27
    SUB 	shift, and go to state 28
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLESS	shift, and go to state 32
    UNLINK	shift, and go to state 33
    WHILE	shift, and go to state 34
    UNTIL	shift, and go to state 35
    PRINT	shift, and go to state 36
    PRINTF	shift, and go to state 37
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    QUERY	shift, and go to state 41
    READ	shift, and go to state 42
    NOT 	shift, and go to state 43
    CMDWORD	shift, and go to state 44
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54
    ';' 	shift, and go to state 55

    cmds	go to state 205
    cmd 	go to state 57
    single_cmd	go to state 58
    expr_cmd	go to state 59
    last_cmd	go to state 60
    next_cmd	go to state 61
    return_cmd	go to state 62
    cmd_words	go to state 63
    C_command	go to state 64
    my_var_list	go to state 65
    package	go to state 66
    use 	go to state 67
    print	go to state 68
    printf	go to state 69
    query	go to state 70
    read_columns	go to state 71
    read_grid	go to state 72
    read_var_list	go to state 73
    split	go to state 74
    loop	go to state 75
    if_block	go to state 76
    trailing_if	go to state 77
    trailing_unless	go to state 78
    trailing_while	go to state 79
    trailing_until	go to state 80
    while_block	go to state 81
    until_block	go to state 82
    do_while_block	go to state 83
    do_until_block	go to state 84
    for_block	go to state 85
    foreach_block	go to state 86
    define_sub	go to state 87
    define_cmd	go to state 88
    a_user_cmd	go to state 89
    skip_cmd	go to state 90
    expr	go to state 91
    SC  	go to state 92



state 106

    C_command  ->  EXECUTE STRING . BOOL STRING '(' r_paren   (rule 41)

    BOOL	shift, and go to state 206



state 107

    for_block  ->  FOR '(' . expr ';' texpr ';' expr r_paren block   (rule 102)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 207



state 108

    foreach_block  ->  FOREACH VARIABLE . '(' listexpr r_paren block   (rule 103)
    foreach_block  ->  FOREACH VARIABLE . '(' ARRAY r_paren block   (rule 104)

    '(' 	shift, and go to state 208



state 109

    expr  ->  FILE_TEST expr .   (rule 137)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    POWOP	shift, and go to state 196

    $default	reduce using rule 137 (expr)



state 110

    expr  ->  GLOB '(' . expr ')'   (rule 131)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 209



state 111

    if_block  ->  IF expr . block ELSE block   (rule 86)
    if_block  ->  IF expr . block   (rule 87)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196
    '{' 	shift, and go to state 103

    block	go to state 210
    start_of_block	go to state 105



state 112

    expr  ->  INDEX '(' . expr ',' expr ')'   (rule 132)
    expr  ->  INDEX '(' . expr ',' expr ',' expr ')'   (rule 133)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 211



state 113

    return_cmd  ->  RETURN expr .   (rule 36)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    $default	reduce using rule 36 (return_cmd)



state 114

    expr  ->  CHOMP VARIABLE .   (rule 126)

    $default	reduce using rule 126 (expr)



state 115

    expr  ->  CHOMP '(' . VARIABLE ')'   (rule 127)

    VARIABLE	shift, and go to state 212



state 116

    expr  ->  CHOP VARIABLE .   (rule 123)

    $default	reduce using rule 123 (expr)



state 117

    expr  ->  CHOP '(' . VARIABLE ')'   (rule 124)

    VARIABLE	shift, and go to state 213



state 118

    my_var_list  ->  MY ARRAY .   (rule 49)

    $default	reduce using rule 49 (my_var_list)



state 119

    var_list_comma  ->  VARIABLE .   (rule 42)
    my_var_list  ->  MY VARIABLE .   (rule 46)
    my_var_list  ->  MY VARIABLE . ASSIGNOP expr   (rule 50)

    ASSIGNOP	shift, and go to state 214

    IF  	reduce using rule 42 (var_list_comma)
    IF  	[reduce using rule 46 (my_var_list)]
    UNLESS	reduce using rule 42 (var_list_comma)
    UNLESS	[reduce using rule 46 (my_var_list)]
    WHILE	reduce using rule 42 (var_list_comma)
    WHILE	[reduce using rule 46 (my_var_list)]
    UNTIL	reduce using rule 42 (var_list_comma)
    UNTIL	[reduce using rule 46 (my_var_list)]
    ';' 	reduce using rule 42 (var_list_comma)
    ';' 	[reduce using rule 46 (my_var_list)]
    $default	reduce using rule 42 (var_list_comma)


state 120

    my_var_list  ->  MY '(' . var_list_comma ')'   (rule 48)

    VARIABLE	shift, and go to state 215

    var_list_comma	go to state 216



state 121

    var_list_comma  ->  var_list_comma . ',' VARIABLE   (rule 43)
    my_var_list  ->  MY var_list_comma .   (rule 47)

    ',' 	shift, and go to state 217

    $default	reduce using rule 47 (my_var_list)



state 122

    package  ->  PACKAGE CMDWORD .   (rule 51)

    $default	reduce using rule 51 (package)



state 123

    use  ->  USE CMDWORD .   (rule 52)

    $default	reduce using rule 52 (use)



state 124

    skip_cmd  ->  SKIP '(' . WORD ')'   (rule 114)
    skip_cmd  ->  SKIP '(' . WORD expr ')'   (rule 115)

    WORD	shift, and go to state 218



state 125

    words  ->  words . WORD   (rule 38)
    define_sub  ->  SUB words . block   (rule 105)
    define_sub  ->  SUB words . '(' PROTOTYPE r_paren block   (rule 106)

    WORD	shift, and go to state 200
    '(' 	shift, and go to state 219
    '{' 	shift, and go to state 103

    block	go to state 220
    start_of_block	go to state 105



state 126

    expr  ->  SUBSTR '(' . expr ',' expr ',' expr ')'   (rule 139)
    expr  ->  SUBSTR '(' . expr ',' expr ')'   (rule 140)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 221



state 127

    expr  ->  SPRINTF '(' . listexpr ')'   (rule 141)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 136
    listexpr	go to state 222



state 128

    expr  ->  SYSTEM '(' . expr ')'   (rule 138)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 223



state 129

    if_block  ->  UNLESS expr . block ELSE block   (rule 88)
    if_block  ->  UNLESS expr . block   (rule 89)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196
    '{' 	shift, and go to state 103

    block	go to state 224
    start_of_block	go to state 105



state 130

    expr  ->  UNLINK '(' . listexpr ')'   (rule 157)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 136
    listexpr	go to state 225



state 131

    while_block  ->  WHILE while_context . texpr block   (rule 98)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    $default	reduce using rule 116 (texpr)

    texpr	go to state 226
    expr	go to state 227



state 132

    until_block  ->  UNTIL while_context . texpr block   (rule 99)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    $default	reduce using rule 116 (texpr)

    texpr	go to state 228
    expr	go to state 227



state 133

    print  ->  PRINT COLUMNS .   (rule 55)

    $default	reduce using rule 55 (print)



state 134

    cmd_words  ->  CMDWORD .   (rule 39)
    print  ->  PRINT CMDWORD . listexpr   (rule 54)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    $default	reduce using rule 39 (cmd_words)

    expr	go to state 136
    listexpr	go to state 229



state 135

    cmd_words  ->  cmd_words . CMDWORD   (rule 40)
    print  ->  PRINT cmd_words .   (rule 56)

    CMDWORD	shift, and go to state 171

    $default	reduce using rule 56 (print)



state 136

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)
    listexpr  ->  expr .   (rule 194)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    $default	reduce using rule 194 (listexpr)



state 137

    print  ->  PRINT listexpr .   (rule 53)
    listexpr  ->  listexpr . ',' expr   (rule 195)

    ',' 	shift, and go to state 230

    $default	reduce using rule 53 (print)



state 138

    printf  ->  PRINTF CMDWORD . listexpr   (rule 59)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 136
    listexpr	go to state 231



state 139

    printf  ->  PRINTF listexpr .   (rule 58)
    listexpr  ->  listexpr . ',' expr   (rule 195)

    ',' 	shift, and go to state 230

    $default	reduce using rule 58 (printf)



state 140

    expr  ->  OPEN WORD .   (rule 146)

    $default	reduce using rule 146 (expr)



state 141

    expr  ->  OPEN '(' . WORD ',' expr ')'   (rule 148)
    expr  ->  '(' . expr r_paren   (rule 179)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    WORD	shift, and go to state 232
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 163



state 142

    expr  ->  OPEN expr .   (rule 147)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    $default	reduce using rule 147 (expr)



state 143

    expr  ->  REWIND WORD .   (rule 144)

    $default	reduce using rule 144 (expr)



state 144

    expr  ->  REWIND '(' . ')'   (rule 142)
    expr  ->  REWIND '(' . WORD ')'   (rule 145)

    WORD	shift, and go to state 233
    ')' 	shift, and go to state 234



state 145

    expr  ->  CLOSE WORD .   (rule 150)

    $default	reduce using rule 150 (expr)



state 146

    expr  ->  CLOSE '(' . WORD ')'   (rule 151)

    WORD	shift, and go to state 235



state 147

    query  ->  QUERY VARIABLE .   (rule 60)
    query  ->  QUERY VARIABLE . STRING   (rule 61)
    query  ->  QUERY VARIABLE . STRING '(' listexpr r_paren   (rule 62)

    STRING	shift, and go to state 236

    $default	reduce using rule 60 (query)



state 148

    var_list_nocomma  ->  VARIABLE .   (rule 44)

    $default	reduce using rule 44 (var_list_nocomma)



state 149

    read_grid  ->  READ READ_GRID . WORD   (rule 72)
    read_grid  ->  READ READ_GRID . WORD listexpr_nocomma   (rule 73)
    read_grid  ->  READ READ_GRID . WORD words   (rule 74)
    read_grid  ->  READ READ_GRID . WORD words listexpr_nocomma   (rule 75)

    WORD	shift, and go to state 237



state 150

    read_columns  ->  READ COLUMNS . read_columns_spec_list   (rule 68)
    read_columns  ->  READ COLUMNS . read_columns_spec_list expr   (rule 69)
    read_columns  ->  READ COLUMNS . WORD read_columns_spec_list   (rule 70)
    read_columns  ->  READ COLUMNS . WORD read_columns_spec_list expr   (rule 71)

    WORD	shift, and go to state 238
    STRING	shift, and go to state 239

    read_columns_spec_list	go to state 240
    read_columns_spec	go to state 241



state 151

    read_var_list  ->  READ WORD . var_list_nocomma   (rule 76)

    VARIABLE	shift, and go to state 148

    var_list_nocomma	go to state 242



state 152

    var_list_nocomma  ->  var_list_nocomma . VARIABLE   (rule 45)
    read_var_list  ->  READ var_list_nocomma .   (rule 77)

    VARIABLE	shift, and go to state 243

    $default	reduce using rule 77 (read_var_list)



state 153

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)
    expr  ->  NOT expr .   (rule 178)

    POWOP	shift, and go to state 196

    $default	reduce using rule 178 (expr)



state 154

    expr  ->  FUNCTION_BUILTIN_NUMERIC '(' . ')'   (rule 182)
    expr  ->  FUNCTION_BUILTIN_NUMERIC '(' . listexpr ')'   (rule 183)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54
    ')' 	shift, and go to state 244

    expr	go to state 136
    listexpr	go to state 245



state 155

    expr  ->  FUNCTION_BUILTIN_TEXT '(' . expr ')'   (rule 184)
    expr  ->  FUNCTION_BUILTIN_TEXT '(' . expr ',' expr ')'   (rule 185)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 246



state 156

    expr  ->  FUNCTION_USER '(' . ')'   (rule 180)
    expr  ->  FUNCTION_USER '(' . listexpr ')'   (rule 181)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54
    ')' 	shift, and go to state 247

    expr	go to state 136
    listexpr	go to state 248



state 157

    expr  ->  S_FROM S_TO .   (rule 119)

    $default	reduce using rule 119 (expr)



state 158

    expr  ->  '<' '>' .   (rule 135)

    $default	reduce using rule 135 (expr)



state 159

    words  ->  words . WORD   (rule 38)
    expr  ->  '<' words . '>'   (rule 136)

    WORD	shift, and go to state 200
    '>' 	shift, and go to state 249



state 160

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)
    expr  ->  '+' expr .   (rule 187)

    POWOP	shift, and go to state 196

    $default	reduce using rule 187 (expr)



state 161

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)
    expr  ->  '-' expr .   (rule 186)

    POWOP	shift, and go to state 196

    $default	reduce using rule 186 (expr)



state 162

    expr  ->  '/' @1 . MATCH_STRING END_MATCH_STRING   (rule 121)

    MATCH_STRING	shift, and go to state 250



state 163

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)
    expr  ->  '(' expr . r_paren   (rule 179)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196
    ')' 	shift, and go to state 251

    r_paren	go to state 252



state 164

    cmds  ->  cmds error .   (rule 4)

    $default	reduce using rule 4 (cmds)



state 165

    cmds  ->  cmds cmd .   (rule 3)

    $default	reduce using rule 3 (cmds)



state 166

    trailing_if  ->  single_cmd IF . expr   (rule 93)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 253



state 167

    trailing_unless  ->  single_cmd UNLESS . expr   (rule 94)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 254



state 168

    trailing_while  ->  single_cmd WHILE . expr   (rule 95)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 255



state 169

    trailing_until  ->  single_cmd UNTIL . expr   (rule 96)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 256



state 170

    cmd  ->  single_cmd SC .   (rule 6)

    $default	reduce using rule 6 (cmd)



state 171

    cmd_words  ->  cmd_words CMDWORD .   (rule 40)

    $default	reduce using rule 40 (cmd_words)



state 172

    a_user_cmd  ->  cmd_words listexpr_nocomma .   (rule 110)
    listexpr_nocomma  ->  listexpr_nocomma . expr   (rule 112)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    $default	reduce using rule 110 (a_user_cmd)

    expr	go to state 257



state 173

    listexpr_nocomma  ->  expr .   (rule 111)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    '<' 	[reduce using rule 111 (listexpr_nocomma)]
    '+' 	[reduce using rule 111 (listexpr_nocomma)]
    '-' 	[reduce using rule 111 (listexpr_nocomma)]
    '/' 	[reduce using rule 111 (listexpr_nocomma)]
    $default	reduce using rule 111 (listexpr_nocomma)



state 174

    cmd  ->  trailing_if SC .   (rule 7)

    $default	reduce using rule 7 (cmd)



state 175

    cmd  ->  trailing_unless SC .   (rule 8)

    $default	reduce using rule 8 (cmd)



state 176

    cmd  ->  trailing_while SC .   (rule 9)

    $default	reduce using rule 9 (cmd)



state 177

    cmd  ->  trailing_until SC .   (rule 10)

    $default	reduce using rule 10 (cmd)



state 178

    expr  ->  expr ASSIGNOP . expr   (rule 156)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 258



state 179

    expr  ->  expr STRING_EQ . expr   (rule 161)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 259



state 180

    expr  ->  expr STRING_NE . expr   (rule 162)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 260



state 181

    expr  ->  expr DOT . expr   (rule 160)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 261



state 182

    expr  ->  expr EQ . expr   (rule 166)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 262



state 183

    expr  ->  expr LE . expr   (rule 164)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 263



state 184

    expr  ->  expr GE . expr   (rule 168)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 264



state 185

    expr  ->  expr AND . expr   (rule 170)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 265



state 186

    expr  ->  expr OR . expr   (rule 169)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 266



state 187

    expr  ->  expr '?' . expr ':' expr   (rule 171)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 267



state 188

    expr  ->  expr '<' . expr   (rule 163)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 268



state 189

    expr  ->  expr '>' . expr   (rule 165)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 269



state 190

    expr  ->  expr NE . expr   (rule 167)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 270



state 191

    expr  ->  expr '+' . expr   (rule 172)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 271



state 192

    expr  ->  expr '-' . expr   (rule 173)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 272



state 193

    expr  ->  expr MULOP . expr   (rule 174)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 273



state 194

    expr  ->  expr '/' . expr   (rule 175)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 274



state 195

    expr  ->  expr '%' . expr   (rule 176)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 275



state 196

    expr  ->  expr POWOP . expr   (rule 177)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 276



state 197

    split  ->  ARRAY ASSIGNOP SPLIT .   (rule 79)

    $default	reduce using rule 79 (split)



state 198

    expr  ->  ARRAY ASSIGNOP '(' . listexpr ')'   (rule 155)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 136
    listexpr	go to state 277



state 199

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  VARIABLE '[' expr . ']'   (rule 158)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)
    expr  ->  VARIABLE '[' expr . ']' POSTDEC   (rule 190)
    expr  ->  VARIABLE '[' expr . ']' POSTINC   (rule 191)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196
    ']' 	shift, and go to state 278



state 200

    words  ->  words WORD .   (rule 38)

    $default	reduce using rule 38 (words)



state 201

    define_cmd  ->  CMD words '(' . PROTOTYPE r_paren block   (rule 107)
    define_cmd  ->  CMD words '(' . PROTOTYPE r_paren   (rule 108)

    PROTOTYPE	shift, and go to state 279



state 202

    expr  ->  ARRAY ASSIGNOP . '(' listexpr ')'   (rule 155)

    '(' 	shift, and go to state 198



state 203

    do_while_block  ->  DO block WHILE . texpr SC   (rule 100)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    $default	reduce using rule 116 (texpr)

    texpr	go to state 280
    expr	go to state 227



state 204

    do_until_block  ->  DO block UNTIL . texpr SC   (rule 101)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    $default	reduce using rule 116 (texpr)

    texpr	go to state 281
    expr	go to state 227



state 205

    cmds  ->  cmds . cmd   (rule 3)
    cmds  ->  cmds . error   (rule 4)
    block  ->  start_of_block cmds . end_of_block   (rule 90)

    error	shift, and go to state 164
    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 2
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    CMD 	shift, and go to state 6
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    DO  	shift, and go to state 10
    EXECUTE	shift, and go to state 11
    FOR 	shift, and go to state 12
    FOREACH	shift, and go to state 13
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    IF  	shift, and go to state 16
    INDEX	shift, and go to state 17
    LAST	shift, and go to state 18
    NEXT	shift, and go to state 19
    RETURN	shift, and go to state 20
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    MY  	shift, and go to state 23
    PACKAGE	shift, and go to state 24
    USE 	shift, and go to state 25
    SKIP	shift, and go to state 26
    SPLIT	shift, and go to state 27
    SUB 	shift, and go to state 28
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLESS	shift, and go to state 32
    UNLINK	shift, and go to state 33
    WHILE	shift, and go to state 34
    UNTIL	shift, and go to state 35
    PRINT	shift, and go to state 36
    PRINTF	shift, and go to state 37
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    QUERY	shift, and go to state 41
    READ	shift, and go to state 42
    NOT 	shift, and go to state 43
    CMDWORD	shift, and go to state 44
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54
    '}' 	shift, and go to state 282
    ';' 	shift, and go to state 55

    cmd 	go to state 165
    single_cmd	go to state 58
    expr_cmd	go to state 59
    last_cmd	go to state 60
    next_cmd	go to state 61
    return_cmd	go to state 62
    cmd_words	go to state 63
    C_command	go to state 64
    my_var_list	go to state 65
    package	go to state 66
    use 	go to state 67
    print	go to state 68
    printf	go to state 69
    query	go to state 70
    read_columns	go to state 71
    read_grid	go to state 72
    read_var_list	go to state 73
    split	go to state 74
    loop	go to state 75
    if_block	go to state 76
    end_of_block	go to state 283
    trailing_if	go to state 77
    trailing_unless	go to state 78
    trailing_while	go to state 79
    trailing_until	go to state 80
    while_block	go to state 81
    until_block	go to state 82
    do_while_block	go to state 83
    do_until_block	go to state 84
    for_block	go to state 85
    foreach_block	go to state 86
    define_sub	go to state 87
    define_cmd	go to state 88
    a_user_cmd	go to state 89
    skip_cmd	go to state 90
    expr	go to state 91
    SC  	go to state 92



state 206

    C_command  ->  EXECUTE STRING BOOL . STRING '(' r_paren   (rule 41)

    STRING	shift, and go to state 284



state 207

    for_block  ->  FOR '(' expr . ';' texpr ';' expr r_paren block   (rule 102)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196
    ';' 	shift, and go to state 285



state 208

    foreach_block  ->  FOREACH VARIABLE '(' . listexpr r_paren block   (rule 103)
    foreach_block  ->  FOREACH VARIABLE '(' . ARRAY r_paren block   (rule 104)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 286
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 136
    listexpr	go to state 287



state 209

    expr  ->  GLOB '(' expr . ')'   (rule 131)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196
    ')' 	shift, and go to state 288



state 210

    if_block  ->  IF expr block . ELSE block   (rule 86)
    if_block  ->  IF expr block .   (rule 87)

    ELSE	shift, and go to state 289

    $default	reduce using rule 87 (if_block)



state 211

    expr  ->  INDEX '(' expr . ',' expr ')'   (rule 132)
    expr  ->  INDEX '(' expr . ',' expr ',' expr ')'   (rule 133)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    ',' 	shift, and go to state 290
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196



state 212

    expr  ->  CHOMP '(' VARIABLE . ')'   (rule 127)

    ')' 	shift, and go to state 291



state 213

    expr  ->  CHOP '(' VARIABLE . ')'   (rule 124)

    ')' 	shift, and go to state 292



state 214

    my_var_list  ->  MY VARIABLE ASSIGNOP . expr   (rule 50)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 293



state 215

    var_list_comma  ->  VARIABLE .   (rule 42)

    $default	reduce using rule 42 (var_list_comma)



state 216

    var_list_comma  ->  var_list_comma . ',' VARIABLE   (rule 43)
    my_var_list  ->  MY '(' var_list_comma . ')'   (rule 48)

    ',' 	shift, and go to state 217
    ')' 	shift, and go to state 294



state 217

    var_list_comma  ->  var_list_comma ',' . VARIABLE   (rule 43)

    VARIABLE	shift, and go to state 295



state 218

    skip_cmd  ->  SKIP '(' WORD . ')'   (rule 114)
    skip_cmd  ->  SKIP '(' WORD . expr ')'   (rule 115)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54
    ')' 	shift, and go to state 296

    expr	go to state 297



state 219

    define_sub  ->  SUB words '(' . PROTOTYPE r_paren block   (rule 106)

    PROTOTYPE	shift, and go to state 298



state 220

    define_sub  ->  SUB words block .   (rule 105)

    $default	reduce using rule 105 (define_sub)



state 221

    expr  ->  SUBSTR '(' expr . ',' expr ',' expr ')'   (rule 139)
    expr  ->  SUBSTR '(' expr . ',' expr ')'   (rule 140)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    ',' 	shift, and go to state 299
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196



state 222

    expr  ->  SPRINTF '(' listexpr . ')'   (rule 141)
    listexpr  ->  listexpr . ',' expr   (rule 195)

    ',' 	shift, and go to state 230
    ')' 	shift, and go to state 300



state 223

    expr  ->  SYSTEM '(' expr . ')'   (rule 138)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196
    ')' 	shift, and go to state 301



state 224

    if_block  ->  UNLESS expr block . ELSE block   (rule 88)
    if_block  ->  UNLESS expr block .   (rule 89)

    ELSE	shift, and go to state 302

    $default	reduce using rule 89 (if_block)



state 225

    expr  ->  UNLINK '(' listexpr . ')'   (rule 157)
    listexpr  ->  listexpr . ',' expr   (rule 195)

    ',' 	shift, and go to state 230
    ')' 	shift, and go to state 303



state 226

    while_block  ->  WHILE while_context texpr . block   (rule 98)

    '{' 	shift, and go to state 103

    block	go to state 304
    start_of_block	go to state 105



state 227

    texpr  ->  expr .   (rule 117)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    $default	reduce using rule 117 (texpr)



state 228

    until_block  ->  UNTIL while_context texpr . block   (rule 99)

    '{' 	shift, and go to state 103

    block	go to state 305
    start_of_block	go to state 105



state 229

    print  ->  PRINT CMDWORD listexpr .   (rule 54)
    listexpr  ->  listexpr . ',' expr   (rule 195)

    ',' 	shift, and go to state 230

    $default	reduce using rule 54 (print)



state 230

    listexpr  ->  listexpr ',' . expr   (rule 195)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 306



state 231

    printf  ->  PRINTF CMDWORD listexpr .   (rule 59)
    listexpr  ->  listexpr . ',' expr   (rule 195)

    ',' 	shift, and go to state 230

    $default	reduce using rule 59 (printf)



state 232

    expr  ->  OPEN '(' WORD . ',' expr ')'   (rule 148)

    ',' 	shift, and go to state 307



state 233

    expr  ->  REWIND '(' WORD . ')'   (rule 145)

    ')' 	shift, and go to state 308



state 234

    expr  ->  REWIND '(' ')' .   (rule 142)

    $default	reduce using rule 142 (expr)



state 235

    expr  ->  CLOSE '(' WORD . ')'   (rule 151)

    ')' 	shift, and go to state 309



state 236

    query  ->  QUERY VARIABLE STRING .   (rule 61)
    query  ->  QUERY VARIABLE STRING . '(' listexpr r_paren   (rule 62)

    '(' 	shift, and go to state 310

    $default	reduce using rule 61 (query)



state 237

    read_grid  ->  READ READ_GRID WORD .   (rule 72)
    read_grid  ->  READ READ_GRID WORD . listexpr_nocomma   (rule 73)
    read_grid  ->  READ READ_GRID WORD . words   (rule 74)
    read_grid  ->  READ READ_GRID WORD . words listexpr_nocomma   (rule 75)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    WORD	shift, and go to state 97
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    $default	reduce using rule 72 (read_grid)

    words	go to state 311
    listexpr_nocomma	go to state 312
    expr	go to state 173



state 238

    read_columns_spec  ->  WORD . COLUMN_IDENT expr   (rule 65)
    read_columns_spec  ->  WORD .   (rule 67)
    read_columns  ->  READ COLUMNS WORD . read_columns_spec_list   (rule 70)
    read_columns  ->  READ COLUMNS WORD . read_columns_spec_list expr   (rule 71)

    COLUMN_IDENT	shift, and go to state 313
    WORD	shift, and go to state 314
    STRING	shift, and go to state 239

    WORD	[reduce using rule 67 (read_columns_spec)]
    STRING	[reduce using rule 67 (read_columns_spec)]
    $default	reduce using rule 67 (read_columns_spec)

    read_columns_spec_list	go to state 315
    read_columns_spec	go to state 241



state 239

    read_columns_spec  ->  STRING . COLUMN_IDENT expr   (rule 66)

    COLUMN_IDENT	shift, and go to state 316



state 240

    read_columns_spec_list  ->  read_columns_spec_list . read_columns_spec   (rule 64)
    read_columns  ->  READ COLUMNS read_columns_spec_list .   (rule 68)
    read_columns  ->  READ COLUMNS read_columns_spec_list . expr   (rule 69)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    WORD	shift, and go to state 314
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 317
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    $default	reduce using rule 68 (read_columns)

    read_columns_spec	go to state 318
    expr	go to state 319



state 241

    read_columns_spec_list  ->  read_columns_spec .   (rule 63)

    $default	reduce using rule 63 (read_columns_spec_list)



state 242

    var_list_nocomma  ->  var_list_nocomma . VARIABLE   (rule 45)
    read_var_list  ->  READ WORD var_list_nocomma .   (rule 76)

    VARIABLE	shift, and go to state 243

    $default	reduce using rule 76 (read_var_list)



state 243

    var_list_nocomma  ->  var_list_nocomma VARIABLE .   (rule 45)

    $default	reduce using rule 45 (var_list_nocomma)



state 244

    expr  ->  FUNCTION_BUILTIN_NUMERIC '(' ')' .   (rule 182)

    $default	reduce using rule 182 (expr)



state 245

    expr  ->  FUNCTION_BUILTIN_NUMERIC '(' listexpr . ')'   (rule 183)
    listexpr  ->  listexpr . ',' expr   (rule 195)

    ',' 	shift, and go to state 230
    ')' 	shift, and go to state 320



state 246

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)
    expr  ->  FUNCTION_BUILTIN_TEXT '(' expr . ')'   (rule 184)
    expr  ->  FUNCTION_BUILTIN_TEXT '(' expr . ',' expr ')'   (rule 185)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    ',' 	shift, and go to state 321
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196
    ')' 	shift, and go to state 322



state 247

    expr  ->  FUNCTION_USER '(' ')' .   (rule 180)

    $default	reduce using rule 180 (expr)



state 248

    expr  ->  FUNCTION_USER '(' listexpr . ')'   (rule 181)
    listexpr  ->  listexpr . ',' expr   (rule 195)

    ',' 	shift, and go to state 230
    ')' 	shift, and go to state 323



state 249

    expr  ->  '<' words '>' .   (rule 136)

    $default	reduce using rule 136 (expr)



state 250

    expr  ->  '/' @1 MATCH_STRING . END_MATCH_STRING   (rule 121)

    END_MATCH_STRING	shift, and go to state 324



state 251

    r_paren  ->  ')' .   (rule 192)

    $default	reduce using rule 192 (r_paren)



state 252

    expr  ->  '(' expr r_paren .   (rule 179)

    $default	reduce using rule 179 (expr)



state 253

    trailing_if  ->  single_cmd IF expr .   (rule 93)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    $default	reduce using rule 93 (trailing_if)



state 254

    trailing_unless  ->  single_cmd UNLESS expr .   (rule 94)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    $default	reduce using rule 94 (trailing_unless)



state 255

    trailing_while  ->  single_cmd WHILE expr .   (rule 95)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    $default	reduce using rule 95 (trailing_while)



state 256

    trailing_until  ->  single_cmd UNTIL expr .   (rule 96)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    $default	reduce using rule 96 (trailing_until)



state 257

    listexpr_nocomma  ->  listexpr_nocomma expr .   (rule 112)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    MULOP	shift, and go to state 193
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    $default	reduce using rule 112 (listexpr_nocomma)



state 258

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr ASSIGNOP expr .   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    $default	reduce using rule 156 (expr)



state 259

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr STRING_EQ expr .   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    POWOP	shift, and go to state 196

    $default	reduce using rule 161 (expr)



state 260

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr STRING_NE expr .   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    POWOP	shift, and go to state 196

    $default	reduce using rule 162 (expr)



state 261

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr DOT expr .   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    $default	reduce using rule 160 (expr)



state 262

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr EQ expr .   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    EQ  	error (nonassociative)
    LE  	error (nonassociative)
    GE  	error (nonassociative)
    '<' 	error (nonassociative)
    '>' 	error (nonassociative)
    NE  	error (nonassociative)

    $default	reduce using rule 166 (expr)



state 263

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr LE expr .   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    EQ  	error (nonassociative)
    LE  	error (nonassociative)
    GE  	error (nonassociative)
    '<' 	error (nonassociative)
    '>' 	error (nonassociative)
    NE  	error (nonassociative)

    $default	reduce using rule 164 (expr)



state 264

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr GE expr .   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    EQ  	error (nonassociative)
    LE  	error (nonassociative)
    GE  	error (nonassociative)
    '<' 	error (nonassociative)
    '>' 	error (nonassociative)
    NE  	error (nonassociative)

    $default	reduce using rule 168 (expr)



state 265

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr AND expr .   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    $default	reduce using rule 170 (expr)



state 266

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr OR expr .   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    $default	reduce using rule 169 (expr)



state 267

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr '?' expr . ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    ':' 	shift, and go to state 325
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196



state 268

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr '<' expr .   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    EQ  	error (nonassociative)
    LE  	error (nonassociative)
    GE  	error (nonassociative)
    '<' 	error (nonassociative)
    '>' 	error (nonassociative)
    NE  	error (nonassociative)

    $default	reduce using rule 163 (expr)



state 269

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr '>' expr .   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    EQ  	error (nonassociative)
    LE  	error (nonassociative)
    GE  	error (nonassociative)
    '<' 	error (nonassociative)
    '>' 	error (nonassociative)
    NE  	error (nonassociative)

    $default	reduce using rule 165 (expr)



state 270

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr NE expr .   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    EQ  	error (nonassociative)
    LE  	error (nonassociative)
    GE  	error (nonassociative)
    '<' 	error (nonassociative)
    '>' 	error (nonassociative)
    NE  	error (nonassociative)

    $default	reduce using rule 167 (expr)



state 271

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr '+' expr .   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    $default	reduce using rule 172 (expr)



state 272

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr '-' expr .   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    $default	reduce using rule 173 (expr)



state 273

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr MULOP expr .   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    POWOP	shift, and go to state 196

    $default	reduce using rule 174 (expr)



state 274

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr '/' expr .   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    POWOP	shift, and go to state 196

    $default	reduce using rule 175 (expr)



state 275

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr '%' expr .   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    POWOP	shift, and go to state 196

    $default	reduce using rule 176 (expr)



state 276

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)
    expr  ->  expr POWOP expr .   (rule 177)

    POWOP	shift, and go to state 196

    $default	reduce using rule 177 (expr)



state 277

    expr  ->  ARRAY ASSIGNOP '(' listexpr . ')'   (rule 155)
    listexpr  ->  listexpr . ',' expr   (rule 195)

    ',' 	shift, and go to state 230
    ')' 	shift, and go to state 326



state 278

    expr  ->  VARIABLE '[' expr ']' .   (rule 158)
    expr  ->  VARIABLE '[' expr ']' . POSTDEC   (rule 190)
    expr  ->  VARIABLE '[' expr ']' . POSTINC   (rule 191)

    POSTINC	shift, and go to state 327
    POSTDEC	shift, and go to state 328

    $default	reduce using rule 158 (expr)



state 279

    define_cmd  ->  CMD words '(' PROTOTYPE . r_paren block   (rule 107)
    define_cmd  ->  CMD words '(' PROTOTYPE . r_paren   (rule 108)

    ')' 	shift, and go to state 251

    r_paren	go to state 329



state 280

    do_while_block  ->  DO block WHILE texpr . SC   (rule 100)

    ';' 	shift, and go to state 55

    SC  	go to state 330



state 281

    do_until_block  ->  DO block UNTIL texpr . SC   (rule 101)

    ';' 	shift, and go to state 55

    SC  	go to state 331



state 282

    end_of_block  ->  '}' .   (rule 92)

    $default	reduce using rule 92 (end_of_block)



state 283

    block  ->  start_of_block cmds end_of_block .   (rule 90)

    $default	reduce using rule 90 (block)



state 284

    C_command  ->  EXECUTE STRING BOOL STRING . '(' r_paren   (rule 41)

    '(' 	shift, and go to state 332



state 285

    for_block  ->  FOR '(' expr ';' . texpr ';' expr r_paren block   (rule 102)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    $default	reduce using rule 116 (texpr)

    texpr	go to state 333
    expr	go to state 227



state 286

    foreach_block  ->  FOREACH VARIABLE '(' ARRAY . r_paren block   (rule 104)
    expr  ->  ARRAY . ASSIGNOP '(' listexpr ')'   (rule 155)

    ASSIGNOP	shift, and go to state 202
    ')' 	shift, and go to state 251

    r_paren	go to state 334



state 287

    foreach_block  ->  FOREACH VARIABLE '(' listexpr . r_paren block   (rule 103)
    listexpr  ->  listexpr . ',' expr   (rule 195)

    ',' 	shift, and go to state 230
    ')' 	shift, and go to state 251

    r_paren	go to state 335



state 288

    expr  ->  GLOB '(' expr ')' .   (rule 131)

    $default	reduce using rule 131 (expr)



state 289

    if_block  ->  IF expr block ELSE . block   (rule 86)

    '{' 	shift, and go to state 103

    block	go to state 336
    start_of_block	go to state 105



state 290

    expr  ->  INDEX '(' expr ',' . expr ')'   (rule 132)
    expr  ->  INDEX '(' expr ',' . expr ',' expr ')'   (rule 133)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 337



state 291

    expr  ->  CHOMP '(' VARIABLE ')' .   (rule 127)

    $default	reduce using rule 127 (expr)



state 292

    expr  ->  CHOP '(' VARIABLE ')' .   (rule 124)

    $default	reduce using rule 124 (expr)



state 293

    my_var_list  ->  MY VARIABLE ASSIGNOP expr .   (rule 50)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    $default	reduce using rule 50 (my_var_list)



state 294

    my_var_list  ->  MY '(' var_list_comma ')' .   (rule 48)

    $default	reduce using rule 48 (my_var_list)



state 295

    var_list_comma  ->  var_list_comma ',' VARIABLE .   (rule 43)

    $default	reduce using rule 43 (var_list_comma)



state 296

    skip_cmd  ->  SKIP '(' WORD ')' .   (rule 114)

    $default	reduce using rule 114 (skip_cmd)



state 297

    skip_cmd  ->  SKIP '(' WORD expr . ')'   (rule 115)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196
    ')' 	shift, and go to state 338



state 298

    define_sub  ->  SUB words '(' PROTOTYPE . r_paren block   (rule 106)

    ')' 	shift, and go to state 251

    r_paren	go to state 339



state 299

    expr  ->  SUBSTR '(' expr ',' . expr ',' expr ')'   (rule 139)
    expr  ->  SUBSTR '(' expr ',' . expr ')'   (rule 140)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 340



state 300

    expr  ->  SPRINTF '(' listexpr ')' .   (rule 141)

    $default	reduce using rule 141 (expr)



state 301

    expr  ->  SYSTEM '(' expr ')' .   (rule 138)

    $default	reduce using rule 138 (expr)



state 302

    if_block  ->  UNLESS expr block ELSE . block   (rule 88)

    '{' 	shift, and go to state 103

    block	go to state 341
    start_of_block	go to state 105



state 303

    expr  ->  UNLINK '(' listexpr ')' .   (rule 157)

    $default	reduce using rule 157 (expr)



state 304

    while_block  ->  WHILE while_context texpr block .   (rule 98)

    $default	reduce using rule 98 (while_block)



state 305

    until_block  ->  UNTIL while_context texpr block .   (rule 99)

    $default	reduce using rule 99 (until_block)



state 306

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)
    listexpr  ->  listexpr ',' expr .   (rule 195)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    $default	reduce using rule 195 (listexpr)



state 307

    expr  ->  OPEN '(' WORD ',' . expr ')'   (rule 148)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 342



state 308

    expr  ->  REWIND '(' WORD ')' .   (rule 145)

    $default	reduce using rule 145 (expr)



state 309

    expr  ->  CLOSE '(' WORD ')' .   (rule 151)

    $default	reduce using rule 151 (expr)



state 310

    query  ->  QUERY VARIABLE STRING '(' . listexpr r_paren   (rule 62)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 136
    listexpr	go to state 343



state 311

    words  ->  words . WORD   (rule 38)
    read_grid  ->  READ READ_GRID WORD words .   (rule 74)
    read_grid  ->  READ READ_GRID WORD words . listexpr_nocomma   (rule 75)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    WORD	shift, and go to state 200
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    $default	reduce using rule 74 (read_grid)

    listexpr_nocomma	go to state 344
    expr	go to state 173



state 312

    read_grid  ->  READ READ_GRID WORD listexpr_nocomma .   (rule 73)
    listexpr_nocomma  ->  listexpr_nocomma . expr   (rule 112)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    $default	reduce using rule 73 (read_grid)

    expr	go to state 257



state 313

    read_columns_spec  ->  WORD COLUMN_IDENT . expr   (rule 65)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 345



state 314

    read_columns_spec  ->  WORD . COLUMN_IDENT expr   (rule 65)
    read_columns_spec  ->  WORD .   (rule 67)

    COLUMN_IDENT	shift, and go to state 313

    $default	reduce using rule 67 (read_columns_spec)



state 315

    read_columns_spec_list  ->  read_columns_spec_list . read_columns_spec   (rule 64)
    read_columns  ->  READ COLUMNS WORD read_columns_spec_list .   (rule 70)
    read_columns  ->  READ COLUMNS WORD read_columns_spec_list . expr   (rule 71)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    WORD	shift, and go to state 314
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 317
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    $default	reduce using rule 70 (read_columns)

    read_columns_spec	go to state 318
    expr	go to state 346



state 316

    read_columns_spec  ->  STRING COLUMN_IDENT . expr   (rule 66)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 347



state 317

    read_columns_spec  ->  STRING . COLUMN_IDENT expr   (rule 66)
    expr  ->  STRING .   (rule 159)

    COLUMN_IDENT	shift, and go to state 316

    $default	reduce using rule 159 (expr)



state 318

    read_columns_spec_list  ->  read_columns_spec_list read_columns_spec .   (rule 64)

    $default	reduce using rule 64 (read_columns_spec_list)



state 319

    read_columns  ->  READ COLUMNS read_columns_spec_list expr .   (rule 69)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    $default	reduce using rule 69 (read_columns)



state 320

    expr  ->  FUNCTION_BUILTIN_NUMERIC '(' listexpr ')' .   (rule 183)

    $default	reduce using rule 183 (expr)



state 321

    expr  ->  FUNCTION_BUILTIN_TEXT '(' expr ',' . expr ')'   (rule 185)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 348



state 322

    expr  ->  FUNCTION_BUILTIN_TEXT '(' expr ')' .   (rule 184)

    $default	reduce using rule 184 (expr)



state 323

    expr  ->  FUNCTION_USER '(' listexpr ')' .   (rule 181)

    $default	reduce using rule 181 (expr)



state 324

    expr  ->  '/' @1 MATCH_STRING END_MATCH_STRING .   (rule 121)

    $default	reduce using rule 121 (expr)



state 325

    expr  ->  expr '?' expr ':' . expr   (rule 171)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 349



state 326

    expr  ->  ARRAY ASSIGNOP '(' listexpr ')' .   (rule 155)

    $default	reduce using rule 155 (expr)



state 327

    expr  ->  VARIABLE '[' expr ']' POSTINC .   (rule 191)

    $default	reduce using rule 191 (expr)



state 328

    expr  ->  VARIABLE '[' expr ']' POSTDEC .   (rule 190)

    $default	reduce using rule 190 (expr)



state 329

    define_cmd  ->  CMD words '(' PROTOTYPE r_paren . block   (rule 107)
    define_cmd  ->  CMD words '(' PROTOTYPE r_paren .   (rule 108)

    '{' 	shift, and go to state 103

    $default	reduce using rule 108 (define_cmd)

    block	go to state 350
    start_of_block	go to state 105



state 330

    do_while_block  ->  DO block WHILE texpr SC .   (rule 100)

    $default	reduce using rule 100 (do_while_block)



state 331

    do_until_block  ->  DO block UNTIL texpr SC .   (rule 101)

    $default	reduce using rule 101 (do_until_block)



state 332

    C_command  ->  EXECUTE STRING BOOL STRING '(' . r_paren   (rule 41)

    ')' 	shift, and go to state 251

    r_paren	go to state 351



state 333

    for_block  ->  FOR '(' expr ';' texpr . ';' expr r_paren block   (rule 102)

    ';' 	shift, and go to state 352



state 334

    foreach_block  ->  FOREACH VARIABLE '(' ARRAY r_paren . block   (rule 104)

    '{' 	shift, and go to state 103

    block	go to state 353
    start_of_block	go to state 105



state 335

    foreach_block  ->  FOREACH VARIABLE '(' listexpr r_paren . block   (rule 103)

    '{' 	shift, and go to state 103

    block	go to state 354
    start_of_block	go to state 105



state 336

    if_block  ->  IF expr block ELSE block .   (rule 86)

    $default	reduce using rule 86 (if_block)



state 337

    expr  ->  INDEX '(' expr ',' expr . ')'   (rule 132)
    expr  ->  INDEX '(' expr ',' expr . ',' expr ')'   (rule 133)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    ',' 	shift, and go to state 355
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196
    ')' 	shift, and go to state 356



state 338

    skip_cmd  ->  SKIP '(' WORD expr ')' .   (rule 115)

    $default	reduce using rule 115 (skip_cmd)



state 339

    define_sub  ->  SUB words '(' PROTOTYPE r_paren . block   (rule 106)

    '{' 	shift, and go to state 103

    block	go to state 357
    start_of_block	go to state 105



state 340

    expr  ->  SUBSTR '(' expr ',' expr . ',' expr ')'   (rule 139)
    expr  ->  SUBSTR '(' expr ',' expr . ')'   (rule 140)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    ',' 	shift, and go to state 358
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196
    ')' 	shift, and go to state 359



state 341

    if_block  ->  UNLESS expr block ELSE block .   (rule 88)

    $default	reduce using rule 88 (if_block)



state 342

    expr  ->  OPEN '(' WORD ',' expr . ')'   (rule 148)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196
    ')' 	shift, and go to state 360



state 343

    query  ->  QUERY VARIABLE STRING '(' listexpr . r_paren   (rule 62)
    listexpr  ->  listexpr . ',' expr   (rule 195)

    ',' 	shift, and go to state 230
    ')' 	shift, and go to state 251

    r_paren	go to state 361



state 344

    read_grid  ->  READ READ_GRID WORD words listexpr_nocomma .   (rule 75)
    listexpr_nocomma  ->  listexpr_nocomma . expr   (rule 112)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    $default	reduce using rule 75 (read_grid)

    expr	go to state 257



state 345

    read_columns_spec  ->  WORD COLUMN_IDENT expr .   (rule 65)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    '<' 	[reduce using rule 65 (read_columns_spec)]
    '+' 	[reduce using rule 65 (read_columns_spec)]
    '-' 	[reduce using rule 65 (read_columns_spec)]
    '/' 	[reduce using rule 65 (read_columns_spec)]
    $default	reduce using rule 65 (read_columns_spec)



state 346

    read_columns  ->  READ COLUMNS WORD read_columns_spec_list expr .   (rule 71)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    $default	reduce using rule 71 (read_columns)



state 347

    read_columns_spec  ->  STRING COLUMN_IDENT expr .   (rule 66)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    '<' 	[reduce using rule 66 (read_columns_spec)]
    '+' 	[reduce using rule 66 (read_columns_spec)]
    '-' 	[reduce using rule 66 (read_columns_spec)]
    '/' 	[reduce using rule 66 (read_columns_spec)]
    $default	reduce using rule 66 (read_columns_spec)



state 348

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)
    expr  ->  FUNCTION_BUILTIN_TEXT '(' expr ',' expr . ')'   (rule 185)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196
    ')' 	shift, and go to state 362



state 349

    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr '?' expr ':' expr .   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196

    $default	reduce using rule 171 (expr)



state 350

    define_cmd  ->  CMD words '(' PROTOTYPE r_paren block .   (rule 107)

    $default	reduce using rule 107 (define_cmd)



state 351

    C_command  ->  EXECUTE STRING BOOL STRING '(' r_paren .   (rule 41)

    $default	reduce using rule 41 (C_command)



state 352

    for_block  ->  FOR '(' expr ';' texpr ';' . expr r_paren block   (rule 102)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 363



state 353

    foreach_block  ->  FOREACH VARIABLE '(' ARRAY r_paren block .   (rule 104)

    $default	reduce using rule 104 (foreach_block)



state 354

    foreach_block  ->  FOREACH VARIABLE '(' listexpr r_paren block .   (rule 103)

    $default	reduce using rule 103 (foreach_block)



state 355

    expr  ->  INDEX '(' expr ',' expr ',' . expr ')'   (rule 133)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 364



state 356

    expr  ->  INDEX '(' expr ',' expr ')' .   (rule 132)

    $default	reduce using rule 132 (expr)



state 357

    define_sub  ->  SUB words '(' PROTOTYPE r_paren block .   (rule 106)

    $default	reduce using rule 106 (define_sub)



state 358

    expr  ->  SUBSTR '(' expr ',' expr ',' . expr ')'   (rule 139)

    NUM 	shift, and go to state 1
    ARRAY	shift, and go to state 99
    PATTERN_VARIABLE	shift, and go to state 3
    VARIABLE	shift, and go to state 4
    VARIABLE_END	shift, and go to state 5
    DIE 	shift, and go to state 7
    EXIT	shift, and go to state 8
    WARN	shift, and go to state 9
    FILE_TEST	shift, and go to state 14
    GLOB	shift, and go to state 15
    INDEX	shift, and go to state 17
    CHOMP	shift, and go to state 21
    CHOP	shift, and go to state 22
    SUBSTR	shift, and go to state 29
    SPRINTF	shift, and go to state 30
    SYSTEM	shift, and go to state 31
    UNLINK	shift, and go to state 33
    OPEN	shift, and go to state 38
    REWIND	shift, and go to state 39
    CLOSE	shift, and go to state 40
    NOT 	shift, and go to state 43
    FUNCTION_BUILTIN_NUMERIC	shift, and go to state 45
    FUNCTION_BUILTIN_TEXT	shift, and go to state 46
    FUNCTION_USER	shift, and go to state 47
    STRING	shift, and go to state 48
    S_FROM	shift, and go to state 49
    '<' 	shift, and go to state 50
    '+' 	shift, and go to state 51
    '-' 	shift, and go to state 52
    '/' 	shift, and go to state 53
    '(' 	shift, and go to state 54

    expr	go to state 365



state 359

    expr  ->  SUBSTR '(' expr ',' expr ')' .   (rule 140)

    $default	reduce using rule 140 (expr)



state 360

    expr  ->  OPEN '(' WORD ',' expr ')' .   (rule 148)

    $default	reduce using rule 148 (expr)



state 361

    query  ->  QUERY VARIABLE STRING '(' listexpr r_paren .   (rule 62)

    $default	reduce using rule 62 (query)



state 362

    expr  ->  FUNCTION_BUILTIN_TEXT '(' expr ',' expr ')' .   (rule 185)

    $default	reduce using rule 185 (expr)



state 363

    for_block  ->  FOR '(' expr ';' texpr ';' expr . r_paren block   (rule 102)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196
    ')' 	shift, and go to state 251

    r_paren	go to state 366



state 364

    expr  ->  INDEX '(' expr ',' expr ',' expr . ')'   (rule 133)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196
    ')' 	shift, and go to state 367



state 365

    expr  ->  SUBSTR '(' expr ',' expr ',' expr . ')'   (rule 139)
    expr  ->  expr . ASSIGNOP expr   (rule 156)
    expr  ->  expr . DOT expr   (rule 160)
    expr  ->  expr . STRING_EQ expr   (rule 161)
    expr  ->  expr . STRING_NE expr   (rule 162)
    expr  ->  expr . '<' expr   (rule 163)
    expr  ->  expr . LE expr   (rule 164)
    expr  ->  expr . '>' expr   (rule 165)
    expr  ->  expr . EQ expr   (rule 166)
    expr  ->  expr . NE expr   (rule 167)
    expr  ->  expr . GE expr   (rule 168)
    expr  ->  expr . OR expr   (rule 169)
    expr  ->  expr . AND expr   (rule 170)
    expr  ->  expr . '?' expr ':' expr   (rule 171)
    expr  ->  expr . '+' expr   (rule 172)
    expr  ->  expr . '-' expr   (rule 173)
    expr  ->  expr . MULOP expr   (rule 174)
    expr  ->  expr . '/' expr   (rule 175)
    expr  ->  expr . '%' expr   (rule 176)
    expr  ->  expr . POWOP expr   (rule 177)

    ASSIGNOP	shift, and go to state 178
    STRING_EQ	shift, and go to state 179
    STRING_NE	shift, and go to state 180
    DOT 	shift, and go to state 181
    EQ  	shift, and go to state 182
    LE  	shift, and go to state 183
    GE  	shift, and go to state 184
    AND 	shift, and go to state 185
    OR  	shift, and go to state 186
    '?' 	shift, and go to state 187
    '<' 	shift, and go to state 188
    '>' 	shift, and go to state 189
    NE  	shift, and go to state 190
    '+' 	shift, and go to state 191
    '-' 	shift, and go to state 192
    MULOP	shift, and go to state 193
    '/' 	shift, and go to state 194
    '%' 	shift, and go to state 195
    POWOP	shift, and go to state 196
    ')' 	shift, and go to state 368



state 366

    for_block  ->  FOR '(' expr ';' texpr ';' expr r_paren . block   (rule 102)

    '{' 	shift, and go to state 103

    block	go to state 369
    start_of_block	go to state 105



state 367

    expr  ->  INDEX '(' expr ',' expr ',' expr ')' .   (rule 133)

    $default	reduce using rule 133 (expr)



state 368

    expr  ->  SUBSTR '(' expr ',' expr ',' expr ')' .   (rule 139)

    $default	reduce using rule 139 (expr)



state 369

    for_block  ->  FOR '(' expr ';' texpr ';' expr r_paren block .   (rule 102)

    $default	reduce using rule 102 (for_block)



state 370

    $   	go to state 371



state 371

    $   	go to state 372



state 372

    $default	accept


