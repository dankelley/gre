dnl HINT: to figure out machine name, compile a program (even a dummy
dnl program) with options as
dnl             gcc -E -dM dummy.c
dnl and note defines that look like the machine name.  For example,
dnl on a Sun Microsystems machine, you'll see, among other
dnl things, a line like 
dnl         #define sun 1
dnl To see how this is used, see the "IS_THIS_A_SUN_SYSTEM"
dnl code below.

dnl For intro on how to code in this 'configure' (really, 'm4')
dnl language, see the file
dnl     /opt/gnu/share/autoconf/acspecific.m4

AC_PREREQ(2.1)

AC_INIT(parser.h)

AC_PREFIX_DEFAULT(/usr)

AC_PROG_INSTALL

PROGS="gre"

AC_SUBST(PROGS)

dnl     checks for programs.

AC_PROG_CXX
AC_PROG_CXXCPP
AC_LANG_CPLUSPLUS

dnl	See if uses string::remove or string::erase
AC_DEFUN(CHECK_OLD_STRING,
AC_MSG_CHECKING(for string::erase() or string::remove())
AC_CACHE_VAL(gre_cv_have_old_string, [
    AC_TRY_COMPILE([
#define _POSIX_SOURCE 1
#include <string>
], [
string s("hi");
s.remove(0,1);
], gre_cv_have_old_string=yes, gre_cv_have_old_string=no)])
    AC_MSG_RESULT($gre_cv_have_old_string)
    if test $gre_cv_have_old_string = yes ; then
        AC_DEFINE(HAVE_OLD_STRING)
    fi
    )dnl
dnl
CHECK_OLD_STRING


define(GCC_TWEAK1,
[AC_BEFORE([$0], [AC_COMPILE_CHECK])AC_BEFORE([$0], [AC_TEST_PROGRAM])AC_BEFORE([$0], [AC_HEADER_EGREP])AC_BEFORE([$0], [AC_TEST_CPP])AC_EGREP_CPP(yes,
[#if defined(__GNUC__)
  yes
#endif
], GCC=1)
if test -n "$GCC"; then
  echo "yes"
  EXTRA_CFLAGS="$EXTRA_CFLAGS -g -Wall -Wno-unused -fno-implicit-templates"
  AC_SUBST(EXTRA_CFLAGS)
else
  echo "no"
fi
])dnl
AC_MSG_CHECKING(for gcc compiler (tweaking stuff if so))
GCC_TWEAK1


AC_DEFUN(IS_THIS_AN_ALPHA_SYSTEM,
AC_MSG_CHECKING(for DEC alpha computer)
AC_CACHE_VAL(gre_cv_is_dec_alpha, [
AC_BEFORE([$0], [AC_COMPILE_CHECK])AC_BEFORE([$0], [AC_TEST_PROGRAM])AC_BEFORE([$0], [AC_HEADER_EGREP])AC_BEFORE([$0], [AC_TEST_CPP])AC_EGREP_CPP(yes,
[#ifdef __alpha__
  yes
#endif
], gre_cv_is_gre_alpha=yes, gre_cv_is_dec_alpha=no)])
    AC_MSG_RESULT($gre_cv_is_dec_alpha)
    if test $gre_cv_is_dec_alpha = yes; then
        AC_DEFINE(IS_DEC_ALPHA)
    fi
)dnl
dnl
IS_THIS_AN_ALPHA_SYSTEM


AC_DEFUN(IS_THIS_A_SUN_SYSTEM,
AC_MSG_CHECKING(for for Sun Microsystems computer)
AC_CACHE_VAL(gre_cv_is_sun, [
AC_BEFORE([$0], [AC_COMPILE_CHECK])AC_BEFORE([$0], [AC_TEST_PROGRAM])AC_BEFORE([$0], [AC_HEADER_EGREP])AC_BEFORE([$0], [AC_TEST_CPP])AC_EGREP_CPP(yes,
[#ifdef sun
  yes
#endif
], gre_cv_is_sun=yes, gre_cv_is_sun=no)])
    AC_MSG_RESULT($gre_cv_is_sun)
    if test $gre_cv_is_sun = yes; then
        AC_DEFINE(IS_SUN)
    fi
)dnl
dnl
IS_THIS_A_SUN_SYSTEM

AC_CHECK_HEADERS(unistd.h)
AC_CHECK_HEADERS(libintl.h)

dnl     Check for netcdf library.  It might be
dnl	in one of several places, so check
dnl	several locations, reporting location
dnl	if found.
AC_MSG_CHECKING(for netcdf library)
define(CHECK_FOR_NETCDF, [
    if test -d /opt/netcdf/include ; then
	#
	# Solaris often has it here
	CXXFLAGS="$CXXFLAGS -I/opt/netcdf/include"
        LIBS="$LIBS -L/opt/netcdf/lib -lnetcdf"
	if test -n "$gre_cv_is_sun" ; then
	    LIBS="$LIBS -lnsl"
	fi
	AC_DEFINE(HAVE_LIBNETCDF)
        echo "yes (in /opt/netcdf/include/netcdf.h and /opt/netcdf/lib/libnetcdf.a)"
    else
	if test -f /usr/local/include/netcdf.h ; then
	    CXXFLAGS="$CPPFLAGS -I/usr/local/include"
	    LIBS="$LIBS -L/usr/local/lib -lnetcdf"
            if test -n "$gre_cv_is_sun" ; then
		LIBS="$LIBS -lnsl"
	    fi
	    AC_DEFINE(HAVE_LIBNETCDF)
            echo "yes (in /usr/local/include/netcdf.h and /usr/local/lib/libnetcdf.a)"
	else
	    #
	    # Linux/debian often has it here.
	    if test -f /usr/include/netcdf.h ; then
                CXXFLAGS="$CPPFLAGS -I/usr/include/netcdf"
                LIBS="$LIBS -L/usr/lib/netcdf -lnetcdf"
                if test -n "$gre_cv_is_sun" ; then
                    LIBS="$LIBS -lnsl"
                fi
                AC_DEFINE(HAVE_LIBNETCDF)
                echo "yes (in /usr/include/netcdf.h and /usr/lib/libnetcdf.a)"
            else
		if test -f /boot/home/lib/netcdf ; then
		    CXXFLAGS="$CPPFLAGS -I/boot/home/include/netcdf"
		    LIBS="$LIBS -L/boot/home/lib/netcdf -lnetcdf"
                    if test -n "$gre_cv_is_sun" ; then
			LIBS="$LIBS -lnsl"
		    fi
                    echo "yes (in /boot/home/netcdf)"
		    AC_DEFINE(HAVE_LIBNETCDF)
		else
	            echo "no"
		fi
            fi
        fi
    fi
])dnl
dnl
CHECK_FOR_NETCDF

AC_CHECK_LIB(m,sin)

dnl     Don't use AC_PROG_AWK, since gets 'mawk' before 'gawk'
define(GRE_PROG_AWK, [AC_CHECK_PROGS(AWK, gawk nawk mawk awk,)])dnl
GRE_PROG_AWK

dnl     checks for UNIX variants that set `DEFS'

dnl     checks for header files
dnl     stdarg.h, stdlib.h
AC_HEADER_STDC

dnl     checks for typedefs
AC_TYPE_PID_T

dnl     Check for String class
AC_DEFUN(CHECK_FOR_STRING_CLASS,

dnl     Check for POSIX times()
AC_DEFUN(CHECK_FOR_POSIX_TIMES,
AC_MSG_CHECKING(for POSIX times subroutine)
AC_CACHE_VAL(gre_cv_have_posix_times, [
    AC_TRY_COMPILE([
#define _POSIX_SOURCE 1
#include <unistd.h>
#include <limits.h>
#include <time.h>
#include <sys/times.h>
], [
struct tms buffer; 
clock_t t = times(&buffer);
], gre_cv_have_posix_times=yes, gre_cv_have_posix_times=no)])
    AC_MSG_RESULT($gre_cv_have_posix_times)
    if test $gre_cv_have_posix_times = yes ; then
        AC_DEFINE(HAVE_POSIX_TIMES)
    fi
    )dnl
dnl
CHECK_FOR_POSIX_TIMES


dnl     checks for functions
AC_CHECK_FUNCS(isnan isinf lstat acosh erf erfc drand48 getpid tmpnam tempname getenv popen glob)

dnl     checks for structure members

dnl     checks for compiler characteristics

dnl     checks for operating system services

dnl     other checks for UNIX variants

AC_OUTPUT(Makefile)
